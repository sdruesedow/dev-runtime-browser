{"version":3,"sources":["node_modules/browser-pack/_prelude.js","admin-gui.js","src/admin/IdentitiesGUI.js","src/admin/PoliciesGUI.js","src/admin/PoliciesManager.js","src/admin/index.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","adminGui","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","_classCallCheck","instance","Constructor","TypeError","Object","defineProperty","value","_createClass","defineProperties","target","props","descriptor","enumerable","configurable","writable","key","protoProps","staticProps","prototype","IdentitiesGUI","identityModule","_this","guiURL","_runtimeURL","_guiURL","_messageBus","messageBus","deployGUI","resultURL","undefined","addListener","msg","body","document","getElementsByTagName","style","parent","postMessage","method","to","$","removeClass","showIdentitiesGUI","then","identityInfo","replyMsg","addClass","type","id","from","on","receivedInfo","Promise","resolve","reject","toRemoveID","getIdentitiesToChoose","showMyIdentities","identities","identity","console","log","callback","idps","html","_getList","off","event","obtainNewIdentity","_resetIdentities","emails","domain","split","push","email","myIdentities","getElementById","innerHTML","table","createTable","tbody","createElement","numIdentities","_i","tr","createTableRow","appendChild","changeID","removeID","className","thead","thEmail","textContent","td","btn","idToUse","innerText","row","parentNode","idToRemove","children","unregisterIdentity","numEmails","splice","idProvider","text","crypto","generateRSAKeyPair","keyPair","publicKey","btoa","sendGenerateMessage","loginUrl","substring","url","finalURL","indexOf","firstPart","secondAuxPart","secondPart","location","origin","_authenticateUser","items","list","numItems","openPopup","result","storeIdentity","userProfile","username","err","2","_interopRequireDefault","obj","__esModule","default","_PoliciesManager","_PoliciesManager2","PoliciesGUI","policyEngine","policiesManager","elements","_setElements","_setListeners","group","openModal","member","val","addToGroup","closeModal","_manageGroups","_this2","groupName","createGroup","_this3","algorithms","append","_getOptions","policyTitle","combiningAlgorithm","addPolicy","_goHome","Materialize","toast","closest","splitId","thisPriority","parseInt","pop","join","lastPriority","getPolicy","getLastPriority","newPriority","decreaseRulePriority","removeFromGroup","deleteGroup","deletePolicy","priority","rule","getRuleOfPolicy","deleteRule","_this4","activeUserPolicy","getActivePolicy","policies","getPoliciesTitles","find","updateActivePolicy","title","keys","scopes","lists","j","variable","info","splitInfo","months","_splitInfo","selected","options","_this5","getFormattedPolicies","policiesTitles","rulesTitles","ids","isEmpty","_showVariablesTypes","_deleteRule","_showRule","_increaseRulePriority","_decreaseRulePriority","_addPolicy","_deletePolicy","_getActivePolicy","_getPoliciesTable","increaseRulePriority","_this6","groupsPE","getGroups","groups","groupsNames","members","_addMember","_deleteMember","_createGroup","_deleteGroup","content","parsedContent","JSON","parse","_this7","date","params","select","form","_getNewConfiguration","empty","getMyEmails","getMyHyperties","_getGroupOptions","_this8","variables","getVariables","_showNewConfigurationPanel","_this9","getVariableInfo","description","tags","input","getGroupsNames","pickadate","selectMonths","selectYears","checked","_info","_getInfo","decision","scope","setInfo","resourceType","shift","condition","deleteInfo","_this10","file","files","reader","FileReader","readAsText","onload","_parseFileContent","onerror","_this11","ruleTitle","attribute","element","_updateRule","splitTitle","index","newDecision","updatePolicy","newSubscriptionType","labels","./PoliciesManager","3","PoliciesManager","context","userPolicies","setVariables","addition","setAdditionMethods","validation","setValidationMethods","user","policy","savePolicies","removePolicy","titles","targets","Date","Domain","Group of users","Subscription preferences","Time of the day","Weekday","createRule","operator","thisOperator","start","end","weekdays","isValidDate","isValidScope","isValidString","isValidDomain","isValidSubscriptionType","isValidTimeslot","saveActivePolicy","pattern","test","infoSplit","day","month","year","isValidFormat","getFullYear","getMonth","getDate","now","isFuture","twoTimes","splitStart","splitEnd","okSize","areIntegers","policiesPE","policiesGUI","rules","sortRules","_getTitle","getRuleByPriority","authorise","weekdayID","variablesTitles","getList","conditionSplit","deletion","getGroup","groupsGUI","opeator","4","_IdentitiesGUI","_PoliciesGUI","./IdentitiesGUI","./PoliciesGUI"],"mappings":"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","file":"admin-gui.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.adminGui = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n// jshint browser:true, jquery: true\n\nvar IdentitiesGUI = function () {\n  function IdentitiesGUI(identityModule) {\n    _classCallCheck(this, IdentitiesGUI);\n\n    if (!identityModule) throw Error('Identity Module not set!');\n    var _this = this;\n    var guiURL = identityModule._runtimeURL + '/identity-gui';\n    _this._guiURL = guiURL;\n    _this.identityModule = identityModule;\n    _this._messageBus = identityModule.messageBus;\n    _this.identityModule.deployGUI();\n\n    _this.resultURL = undefined;\n\n    _this._messageBus.addListener(guiURL, function (msg) {\n      var identityInfo = msg.body.value;\n      var value = void 0;\n\n      // unhide the config page with the identity GUI\n      document.getElementsByTagName('body')[0].style = 'background-color:white;';\n      parent.postMessage({ body: { method: 'showAdminPage' }, to: 'runtime:gui-manager' }, '*');\n      $('.admin-page').removeClass('hide');\n      _this.showIdentitiesGUI(msg.body.value).then(function (identityInfo) {\n        var replyMsg = void 0;\n\n        //hide config page with the identity GUI\n        parent.postMessage({ body: { method: 'hideAdminPage' }, to: 'runtime:gui-manager' }, '*');\n        $('.admin-page').addClass('hide');\n        document.getElementsByTagName('body')[0].style = 'background-color:transparent';\n        $('.identities-section').addClass('hide');\n        $('.policies-section').addClass('hide');\n\n        switch (identityInfo.type) {\n          case 'idp':\n            value = { type: 'idp', value: identityInfo.value, code: 200 };\n            replyMsg = { id: msg.id, type: 'response', to: msg.from, from: msg.to, body: value };\n            _this._messageBus.postMessage(replyMsg);\n            break;\n\n          case 'identity':\n            value = { type: 'identity', value: identityInfo.value, code: 200 };\n            replyMsg = { id: msg.id, type: 'response', to: msg.from, from: msg.to, body: value };\n            _this._messageBus.postMessage(replyMsg);\n            break;\n\n          default:\n            value = { type: 'error', value: 'Error on identity GUI', code: 400 };\n            replyMsg = { id: msg.id, type: 'response', to: msg.from, from: msg.to, body: value };\n            _this._messageBus.postMessage(replyMsg);\n        }\n      });\n    });\n\n    $('.identities-page-show').on('click', function () {\n      //TODO call a IdM method that requests the identities\n      _this.showIdentitiesGUI();\n    });\n  }\n\n  _createClass(IdentitiesGUI, [{\n    key: 'showIdentitiesGUI',\n    value: function showIdentitiesGUI(receivedInfo) {\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n\n        var identityInfo = void 0;\n        var toRemoveID = void 0;\n\n        if (receivedInfo) {\n          identityInfo = receivedInfo;\n          toRemoveID = false;\n        } else {\n          toRemoveID = true;\n          identityInfo = _this.identityModule.getIdentitiesToChoose();\n        }\n\n        $('.policies-section').addClass('hide');\n        $('.identities-section').removeClass('hide');\n\n        _this.showMyIdentities(identityInfo.identities, toRemoveID).then(function (identity) {\n          console.log('chosen identity: ', identity);\n          resolve({ type: 'identity', value: identity });\n        });\n\n        var callback = function callback(value) {\n          console.log('chosen identity: ', value);\n          resolve({ type: 'identity', value: value });\n        };\n\n        var idps = identityInfo.idps;\n        $('#idproviders').html(_this._getList(idps));\n        $('#idproviders').off();\n        $('#idproviders').on('click', function (event) {\n          return _this.obtainNewIdentity(callback, toRemoveID);\n        });\n        //$('.back').on('click', (event) => _this.goHome());\n        $('.identities-reset').off();\n        $('.identities-reset').on('click', function (event) {\n          return _this._resetIdentities(callback);\n        });\n      });\n    }\n  }, {\n    key: 'showMyIdentities',\n    value: function showMyIdentities(emails, toRemoveID) {\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n\n        // let identities = _this.identityModule.getIdentities();\n        var identities = [];\n\n        for (var i in emails) {\n          var domain = emails[i].split('@');\n          identities.push({ email: emails[i], domain: domain[1] });\n        }\n\n        var myIdentities = document.getElementById('my-ids');\n        myIdentities.innerHTML = '';\n\n        var table = _this.createTable();\n\n        var tbody = document.createElement('tbody');\n        var numIdentities = identities.length;\n        for (var _i = 0; _i < numIdentities; _i++) {\n          var tr = _this.createTableRow(identities[_i], toRemoveID);\n          tbody.appendChild(tr);\n        }\n\n        table.appendChild(tbody);\n        myIdentities.appendChild(table);\n\n        var callback = function callback(identity) {\n          resolve(identity);\n        };\n        if (!toRemoveID) {\n          $('.clickable-cell').on('click', function (event) {\n            return _this.changeID(callback);\n          });\n        }\n        $('.remove-id').on('click', function (event) {\n          return _this.removeID(emails);\n        });\n      });\n    }\n  }, {\n    key: 'createTable',\n    value: function createTable() {\n      var table = document.createElement('table');\n      table.className = 'centered';\n      var thead = document.createElement('thead');\n      var tr = document.createElement('tr');\n      var thEmail = document.createElement('th');\n      thEmail.textContent = 'Email';\n      tr.appendChild(thEmail);\n      thead.appendChild(tr);\n      table.appendChild(thead);\n      return table;\n    }\n  }, {\n    key: 'createTableRow',\n    value: function createTableRow(identity, toRemoveID) {\n      var tr = document.createElement('tr');\n\n      var td = document.createElement('td');\n      td.textContent = identity.email;\n      td.className = 'clickable-cell';\n      td.style = 'cursor: pointer';\n      tr.appendChild(td);\n\n      td = document.createElement('td');\n\n      if (toRemoveID) {\n        var btn = document.createElement('button');\n        btn.textContent = 'Remove';\n        btn.className = 'remove-id waves-effect waves-light btn';\n        td.appendChild(btn);\n      }\n      tr.appendChild(td);\n\n      return tr;\n    }\n  }, {\n    key: 'changeID',\n    value: function changeID(callback) {\n      var _this = this;\n\n      var idToUse = event.target.innerText;\n\n      //TODO improve later.\n      //prevents when the users selects an hyperty, exit the identity page and goes again to the identity page, from selecting \"settings\" button as identity.\n      if (idToUse !== 'settings') {\n\n        callback(idToUse);\n        return idToUse;\n      }\n    }\n  }, {\n    key: 'removeID',\n    value: function removeID(emails) {\n      var _this = this;\n      var row = event.target.parentNode.parentNode;\n      var idToRemove = row.children[0].textContent;\n      var domain = row.children[1].textContent;\n      _this.identityModule.unregisterIdentity(idToRemove);\n\n      var numEmails = emails.length;\n      for (var i = 0; i < numEmails; i++) {\n        if (emails[i].email === idToRemove) {\n          emails.splice(i, 1);\n          break;\n        }\n      }\n      // -------------------------------------------------------------------------//\n      _this.showMyIdentities(emails, true);\n    }\n  }, {\n    key: 'obtainNewIdentity',\n    value: function obtainNewIdentity(callback, toRemoveID) {\n      var _this = this;\n      var idProvider = event.target.textContent;\n      var idProvider2 = event.target.text;\n\n      _this.identityModule.crypto.generateRSAKeyPair().then(function (keyPair) {\n\n        var publicKey = btoa(keyPair.public);\n\n        _this.identityModule.sendGenerateMessage(publicKey, 'origin', undefined, idProvider).then(function (value) {\n          console.log('receivedURL: ' + value.loginUrl.substring(0, 20) + '...');\n\n          var url = value.loginUrl;\n          var finalURL = void 0;\n\n          //check if the receivedURL contains the redirect field and replace it\n          if (url.indexOf('redirect_uri') !== -1) {\n            var firstPart = url.substring(0, url.indexOf('redirect_uri'));\n            var secondAuxPart = url.substring(url.indexOf('redirect_uri'), url.length);\n\n            var secondPart = secondAuxPart.substring(secondAuxPart.indexOf('&'), url.length);\n\n            //check if the reddirect field is the last field of the URL\n            if (secondPart.indexOf('&') !== -1) {\n              finalURL = firstPart + 'redirect_uri=' + location.origin + secondPart;\n            } else {\n              finalURL = firstPart + 'redirect_uri=' + location.origin;\n            }\n          }\n          _this.resultURL = finalURL || url;\n\n          $('.login-idp').html('<p>Chosen IDP: ' + idProvider + '</p>');\n          $('.login').removeClass('hide');\n          $('.login-btn').off();\n          $('.login-btn').on('click', function (event) {\n            $('.login').addClass('hide');\n            _this._authenticateUser(keyPair, publicKey, value, 'origin', idProvider).then(function (email) {\n              callback(email);\n              _this.showIdentitiesGUI();\n            });\n          });\n        });\n      });\n    }\n  }, {\n    key: '_getList',\n    value: function _getList(items) {\n      var list = '';\n      var numItems = items.length;\n\n      for (var i = 0; i < numItems; i++) {\n        list += '<li class=\"divider\"></li>';\n        list += '<li><a class=\"center-align\">' + items[i] + '</a></li>';\n      }\n\n      return list;\n    }\n  }, {\n    key: '_authenticateUser',\n    value: function _authenticateUser(keyPair, publicKey, value, origin, idProvider) {\n      var _this = this;\n      var url = _this.resultURL;\n\n      return new Promise(function (resolve, reject) {\n\n        _this.identityModule.openPopup(url).then(function (identity) {\n\n          _this.identityModule.sendGenerateMessage(publicKey, origin, identity, idProvider).then(function (result) {\n\n            if (result) {\n\n              _this.identityModule.storeIdentity(result, keyPair).then(function (value) {\n                resolve(value.userProfile.username);\n              }, function (err) {\n                reject(err);\n              });\n            } else {\n              reject('error on obtaining identity information');\n            }\n          });\n        }, function (err) {\n          reject(err);\n        });\n      });\n    }\n  }, {\n    key: '_resetIdentities',\n    value: function _resetIdentities() {\n      console.log('_resetIdentities');\n    }\n  }]);\n\n  return IdentitiesGUI;\n}();\n\nexports.default = IdentitiesGUI;\n\n},{}],2:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _PoliciesManager = require('./PoliciesManager');\n\nvar _PoliciesManager2 = _interopRequireDefault(_PoliciesManager);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar PoliciesGUI = function () {\n  function PoliciesGUI(policyEngine) {\n    _classCallCheck(this, PoliciesGUI);\n\n    if (!policyEngine) throw Error('Policy Engine is not set!');\n    this.policiesManager = new _PoliciesManager2.default(policyEngine);\n    this.elements = this._setElements();\n    this._setListeners();\n  }\n\n  _createClass(PoliciesGUI, [{\n    key: '_addMember',\n    value: function _addMember() {\n      var _this = this;\n\n      var group = event.target.id;\n      $('.member-new-intro').html('<h5>Add a member to a group</h5><p>Insert a user email below to add to the \"' + group + '\" group.</p>');\n      $('.member-new-modal').openModal();\n      $('.member-new-ok').off();\n      $('.member-new-ok').on('click', function (event) {\n        var member = $('#member-new').val();\n        $('#member-new').val('');\n        _this.policiesManager.addToGroup(group, member);\n        $('.member-new-modal').closeModal();\n        _this._manageGroups();\n      });\n    }\n  }, {\n    key: '_createGroup',\n    value: function _createGroup() {\n      var _this2 = this;\n\n      $('#group-new-name').val('');\n      $('.group-new-modal').openModal();\n      $('.group-new-ok').on('click', function (event) {\n        var groupName = $('#group-new-name').val();\n        _this2.policiesManager.createGroup(groupName);\n        _this2._manageGroups();\n      });\n    }\n  }, {\n    key: '_addPolicy',\n    value: function _addPolicy() {\n      var _this3 = this;\n\n      $('#policy-new-title').val('');\n      $('.combining').html('');\n      var algorithms = ['Block overrides', 'Allow overrides', 'First applicable'];\n      $('.combining').append(this._getOptions('comb-algorithm', 'Choose a combining algorithm', algorithms));\n      $('.policy-new').openModal();\n\n      $('.policy-new-ok').off();\n      $('.policy-new-ok').on('click', function (event) {\n        var policyTitle = $('#policy-new-title').val();\n        if (!policyTitle) {\n          Materialize.toast('Invalid policy title', 4000);\n        } else {\n          var combiningAlgorithm = $('#comb-algorithm').val();\n          _this3.policiesManager.addPolicy(policyTitle, combiningAlgorithm);\n          $('.help-menu').addClass('hide');\n          $('.policy-new').closeModal();\n          _this3._goHome();\n        }\n      });\n      $('.help-btn').off();\n      $('.help-btn').on('click', function (event) {\n        $('.help-menu').removeClass('hide');\n      });\n    }\n  }, {\n    key: '_decreaseRulePriority',\n    value: function _decreaseRulePriority() {\n      var id = event.target.closest('tr').id;\n      var splitId = id.split(':');\n      var thisPriority = parseInt(splitId[splitId.length - 1]);\n      splitId.pop();\n      var policyTitle = splitId.join(':');\n      var lastPriority = this.policiesManager.getPolicy(policyTitle).getLastPriority();\n      if (lastPriority != thisPriority) {\n        var newPriority = parseInt(thisPriority + 1);\n        this.policiesManager.decreaseRulePriority(policyTitle, thisPriority, newPriority);\n        this._goHome();\n      }\n    }\n  }, {\n    key: '_deleteMember',\n    value: function _deleteMember() {\n      var id = event.target.closest('tr').id;\n      var splitId = id.split('::');\n      var member = splitId[splitId.length - 1];\n      splitId.pop();\n      var group = splitId.join('::');\n      this.policiesManager.removeFromGroup(group, member);\n      this._manageGroups();\n    }\n  }, {\n    key: '_deleteGroup',\n    value: function _deleteGroup() {\n      var groupName = event.target.closest('tr').children[0].id;\n      this.policiesManager.deleteGroup(groupName);\n      this._manageGroups();\n    }\n  }, {\n    key: '_deletePolicy',\n    value: function _deletePolicy() {\n      var policyTitle = event.target.closest('tr').id;\n      this.policiesManager.deletePolicy(policyTitle);\n      this._goHome();\n    }\n  }, {\n    key: '_deleteRule',\n    value: function _deleteRule() {\n      var id = event.target.closest('tr').id;\n      var splitId = id.split(':');\n      var priority = splitId[splitId.length - 1];\n      splitId.pop();\n      var policyTitle = splitId.join(':');\n      var rule = this.policiesManager.getRuleOfPolicy(policyTitle, priority);\n\n      this.policiesManager.deleteRule(policyTitle, rule);\n      this._goHome();\n    }\n  }, {\n    key: '_getActivePolicy',\n    value: function _getActivePolicy() {\n      var _this4 = this;\n\n      $('.policy-active').html('');\n      var activeUserPolicy = this.policiesManager.getActivePolicy();\n      var policies = this.policiesManager.getPoliciesTitles();\n      policies.push('Deactivate all policies');\n\n      $('.policy-active').append(this._getOptions('policies-list', 'Click to activate a policy', policies, activeUserPolicy));\n\n      $('#policies-list').on('click', function (event) {\n        var policyTitle = $('#policies-list').find(\":selected\")[0].textContent;\n        if (policyTitle === 'Deactivate all policies') {\n          policyTitle = undefined;\n        }\n        _this4.policiesManager.updateActivePolicy(policyTitle);\n      });\n    }\n  }, {\n    key: '_getGroupOptions',\n    value: function _getGroupOptions(title, keys, scopes, lists) {\n      var list = '<option disabled selected>' + title + '</option>';\n\n      for (var i in keys) {\n        list += '<optgroup label=' + keys[i] + '>';\n        for (var j in lists[i]) {\n          list += '<option id=\"' + scopes[i] + '\">' + lists[i][j] + '</option>';\n        }\n      }\n\n      return list;\n    }\n  }, {\n    key: '_getInfo',\n    value: function _getInfo(variable) {\n      var info = void 0;\n\n      switch (variable) {\n        case 'Date':\n          info = $('.config').find('input').val();\n          if (info.indexOf(',') !== -1) {\n            //20 July, 2016\n            var splitInfo = info.split(' '); //['20', 'July,',' '2016']\n            splitInfo[1] = splitInfo[1].substring(0, splitInfo[1].length - 1); //'July'\n            var months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n            info = splitInfo[0] + '/' + (months.indexOf(splitInfo[1]) + 1) + '/' + splitInfo[2];\n          } else {\n            // 2016-07-20\n            var _splitInfo = info.split('-');\n            info = _splitInfo[2] + '/' + _splitInfo[1] + '/' + _splitInfo[0];\n          }\n          break;\n        case 'Group of users':\n          info = $('#group').find(\":selected\").text();\n          break;\n        case 'Subscription preferences':\n          if (info = $(\"input[name='rule-new-subscription']:checked\")[0] !== undefined) {\n            info = $(\"input[name='rule-new-subscription']:checked\")[0].id;\n          }\n          break;\n        case 'Weekday':\n          info = $('#weekday').find(\":selected\").text();\n          break;\n        default:\n          info = $('.config').find('input').val();\n          break;\n      }\n\n      return info;\n    }\n  }, {\n    key: '_getList',\n    value: function _getList(items) {\n      var list = '';\n      var numItems = items.length;\n\n      for (var i = 0; i < numItems; i++) {\n        list += '<li class=\"divider\"></li>';\n        list += '<li><a class=\"center-align\">' + items[i] + '</a></li>';\n      }\n\n      return list;\n    }\n  }, {\n    key: '_getOptions',\n    value: function _getOptions(id, title, list, selected) {\n      var options = '<select id=\"' + id + '\" class=\"browser-default\"><option disabled selected>' + title + '</option>';\n      for (var i in list) {\n        if (selected !== undefined & selected === list[i]) {\n          options += '<option selected id=\"' + id + '\">' + list[i] + '</option>';\n        } else {\n          options += '<option id=\"' + id + '\">' + list[i] + '</option>';\n        }\n      }\n      options += '</select>';\n\n      return options;\n    }\n  }, {\n    key: '_getPoliciesTable',\n    value: function _getPoliciesTable() {\n      var _this5 = this;\n\n      $('.policies-no').addClass('hide');\n      $('.policies-current').html('');\n\n      var policies = this.policiesManager.getFormattedPolicies();\n      var policiesTitles = [];\n      var rulesTitles = [];\n      var ids = [];\n\n      for (var i in policies) {\n        policiesTitles.push(policies[i].title);\n        rulesTitles.push(policies[i].rulesTitles);\n        ids.push(policies[i].ids);\n      }\n\n      var table = '<table>';\n      var isEmpty = policiesTitles.length === 0;\n\n      for (var _i in policiesTitles) {\n        table += '<thead><tr id=\"' + policiesTitles[_i] + '\"><td></td><td></td><th class=\"center-align\">' + policiesTitles[_i] + '</th><td><i class=\"material-icons clickable-cell policy-delete\" style=\"cursor: pointer; vertical-align: middle\">delete_forever</i></td></tr></thead><tbody>';\n\n        for (var j in rulesTitles[_i]) {\n          table += '<tr id=\"' + ids[_i][j] + '\" ><td><i class=\"material-icons clickable-cell rule-priority-increase\" style=\"cursor: pointer; vertical-align: middle\">arrow_upward</i></td><td><i class=\"material-icons clickable-cell rule-priority-decrease\" style=\"cursor: pointer; vertical-align: middle\">arrow_downward</i></td><td class=\"rule-show clickable-cell\" style=\"cursor: pointer\">' + rulesTitles[_i][j] + '</td><td><i class=\"material-icons clickable-cell rule-delete\" style=\"cursor: pointer; vertical-align: middle\">clear</i></td></tr>';\n        }\n        table += '<tr id=\"' + policiesTitles[_i] + '\"></td><td></td><td></td><td style=\"text-align:center\"><i class=\"material-icons clickable-cell center-align rule-add\" style=\"cursor: pointer\">add_circle</i></td></tr>';\n      }\n      if (!isEmpty) {\n        table += '</tbody></table>';\n        $('.policies-current').append(table);\n      } else {\n        $('.policies-no').removeClass('hide');\n      }\n      $('.rule-add').on('click', function (event) {\n        _this5._showVariablesTypes();\n      });\n      $('.rule-delete').on('click', function (event) {\n        _this5._deleteRule();\n      });\n      $('.rule-show').on('click', function (event) {\n        _this5._showRule();\n      });\n      $('.rule-priority-increase').on('click', function (event) {\n        _this5._increaseRulePriority();\n      });\n      $('.rule-priority-decrease').on('click', function (event) {\n        _this5._decreaseRulePriority();\n      });\n      $('.policy-add').off();\n      $('.policy-add').on('click', function (event) {\n        _this5._addPolicy();\n      });\n      $('.policy-delete').on('click', function (event) {\n        _this5._deletePolicy();\n      });\n    }\n  }, {\n    key: '_goHome',\n    value: function _goHome() {\n      this._getActivePolicy();\n      this._getPoliciesTable();\n    }\n  }, {\n    key: '_increaseRulePriority',\n    value: function _increaseRulePriority() {\n      var id = event.target.closest('tr').id;\n      var splitId = id.split(':');\n      var thisPriority = parseInt(splitId[splitId.length - 1]);\n      if (thisPriority !== 0) {\n        splitId.pop();\n        var policyTitle = splitId.join(':');\n        var newPriority = thisPriority - 1;\n\n        this.policiesManager.increaseRulePriority(policyTitle, thisPriority, newPriority);\n        this._goHome();\n      }\n    }\n  }, {\n    key: '_manageGroups',\n    value: function _manageGroups() {\n      var _this6 = this;\n\n      $('.groups-current').html('');\n      var groupsPE = this.policiesManager.getGroups();\n      var groups = groupsPE.groupsNames;\n      var members = groupsPE.members;\n      var ids = groupsPE.ids;\n\n      var table = '<table>';\n      var isEmpty = groups.length === 0;\n\n      for (var i in groups) {\n        table += '<thead><tr><th id=\"' + groups[i] + '\">' + groups[i] + '</th><td style=\"text-align:right\"><i class=\"material-icons clickable-cell group-delete\" style=\"cursor: pointer; vertical-align: middle\">delete_forever</i></td></tr></thead><tbody>';\n        for (var j in members[i]) {\n          table += '<tr id=\"' + ids[i][j] + '\" ><td style=\"cursor: pointer\">' + members[i][j] + '</td><td style=\"text-align:right\"><i class=\"material-icons clickable-cell member-delete\" style=\"cursor: pointer; vertical-align: middle\">clear</i></td></tr>';\n        }\n\n        table += '<tr id=\"' + groups[i] + '\"><td><i class=\"material-icons clickable-cell member-add\" id=\"' + groups[i] + '\" style=\"cursor: pointer\">add_circle</i></td></tr>';\n      }\n\n      if (!isEmpty) {\n        table += '</tbody></table>';\n        $('.groups-current').append(table);\n      } else {\n        $('.groups-current').append('<p>There are no groups set.</p>');\n      }\n\n      $('.member-add').off();\n      $('.member-add').on('click', function (event) {\n        _this6._addMember();\n      });\n      $('.member-delete').on('click', function (event) {\n        _this6._deleteMember();\n      });\n      $('.group-add').off();\n      $('.group-add').on('click', function (event) {\n        _this6._createGroup();\n      });\n      $('.group-delete').on('click', function (event) {\n        _this6._deleteGroup();\n      });\n    }\n  }, {\n    key: '_parseFileContent',\n    value: function _parseFileContent(content) {\n      var parsedContent = JSON.parse(content);\n      for (var i in parsedContent) {\n        this.policiesManager.addPolicy(i, undefined, parsedContent[i]);\n      }\n      $('.policy-new').closeModal();\n    }\n  }, {\n    key: '_setElements',\n    value: function _setElements() {\n      var _this7 = this;\n\n      return {\n        date: function date(params) {\n          return '<input type=\"date\" class=\"datepicker\">';\n        },\n        select: function select(params) {\n          return _this7._getOptions(params[0], params[1], params[2]);\n        },\n        form: function form(params) {\n          return '<form><input type=\"text\" placeholder=\"' + params + '\"></input></form>';\n        }\n      };\n    }\n  }, {\n    key: '_showNewConfigurationPanel',\n    value: function _showNewConfigurationPanel(policyTitle) {\n      var variable = event.target.text;\n      $('.variable').html(this._getNewConfiguration(policyTitle, variable));\n      $('.scopes').empty().html('');\n\n      var keys = ['Email', 'Hyperty', 'All'];\n      var scopes = ['identity', 'hyperty', 'global'];\n      var lists = [];\n\n      lists.push(this.policiesManager.getMyEmails());\n      lists.push(this.policiesManager.getMyHyperties());\n      lists.push(['All identities and hyperties']);\n      $('.scopes').append(this._getGroupOptions('Apply this configuration to:', keys, scopes, lists));\n      $('.variable').removeClass('hide');\n    }\n  }, {\n    key: '_showVariablesTypes',\n    value: function _showVariablesTypes() {\n      var _this8 = this;\n\n      var policyTitle = event.target.closest('tr').id;\n\n      $('#variables-types').empty().html('');\n      var variables = this.policiesManager.getVariables();\n      $('#variables-types').append(this._getList(variables));\n      $('.variable').addClass('hide');\n      $('.rule-new').openModal();\n      $('#variables-types').off();\n      $('#variables-types').on('click', function (event) {\n        _this8._showNewConfigurationPanel(policyTitle);\n      });\n    }\n  }, {\n    key: '_getNewConfiguration',\n    value: function _getNewConfiguration(policyTitle, variable) {\n      var _this9 = this;\n\n      var info = this.policiesManager.getVariableInfo(variable);\n      $('.rule-new-title').html(info.title);\n      $('.description').html(info.description);\n      $('.config').html('');\n\n      if (variable === 'Subscription preferences') {\n        $('.subscription-type').removeClass('hide');\n      } else {\n        $('.subscription-type').addClass('hide');\n        var tags = info.input;\n        for (var i in tags) {\n          if (variable === 'Group of users') {\n            tags[i][1].push(this.policiesManager.getGroupsNames());\n          }\n          $('.config').append(this.elements[tags[i][0]](tags[i][1]));\n          if (variable === 'Group of users') {\n            tags[i][1].pop();\n          }\n        }\n        if (variable === 'date') {\n          $('.datepicker').pickadate({\n            selectMonths: true,\n            selectYears: 15\n          });\n        }\n      }\n      document.getElementById('allow').checked = false;\n      document.getElementById('block').checked = false;\n      $('.ok-btn').off();\n      $('.ok-btn').on('click', function (event) {\n        if ($(\"input[name='rule-new-decision']:checked\")[0] !== undefined) {\n          var _info = _this9._getInfo(variable);\n          var decision = $(\"input[name='rule-new-decision']:checked\")[0].id;\n          decision = decision === 'allow';\n          var scope = $('.scopes').find(\":selected\")[0].id;\n          var target = $('.scopes').find(\":selected\")[0].textContent;\n          target = target === 'All identities and hyperties' ? 'global' : target;\n          _this9.policiesManager.setInfo(variable, policyTitle, _info, decision, scope, target);\n          $('.rule-new').closeModal();\n          _this9._goHome();\n        } else {\n          throw Error('INFORMATION MISSING: please specify an authorisation decision.');\n        }\n      });\n    }\n  }, {\n    key: '_deleteInfo',\n    value: function _deleteInfo(resourceType) {\n      var id = event.target.closest('tr').id;\n      var splitId = id.split(':');\n      var scope = splitId[0];\n      splitId.shift();\n      var target = splitId.join('');\n      var condition = event.target.closest('tr').children[0].id;\n      this.policiesManager.deleteInfo(resourceType, scope, target, condition);\n      this._goHome();\n    }\n  }, {\n    key: '_setListeners',\n    value: function _setListeners() {\n      var _this10 = this;\n\n      $('.settings-btn').on('click', function (event) {\n        parent.postMessage({ body: { method: 'showAdminPage' }, to: 'runtime:gui-manager' }, '*');\n        $('.admin-page').removeClass('hide');\n        document.getElementsByTagName('body')[0].style = 'background-color:white;';\n      });\n\n      $('.policies-page-show').on('click', function (event) {\n        $('.policies-section').removeClass('hide');\n        $('.identities-section').addClass('hide');\n        _this10._goHome();\n        _this10._manageGroups();\n      });\n\n      $('.admin-page-exit').on('click', function (event) {\n        parent.postMessage({ body: { method: 'hideAdminPage' }, to: 'runtime:gui-manager' }, '*');\n        $('.admin-page').addClass('hide');\n        document.getElementsByTagName('body')[0].style = 'background-color:transparent;';\n      });\n\n      $('.exit-btn').on('click', function (event) {\n        $('.subscription-type').addClass('hide');\n        $('.help-menu').addClass('hide');\n      });\n\n      $('#policy-file').on('change', function (event) {\n        var file = event.target.files[0];\n        var reader = new FileReader();\n        reader.readAsText(file, \"UTF-8\");\n        reader.onload = function (event) {\n          _this10._parseFileContent(event.target.result);\n          _this10._goHome();\n        };\n        reader.onerror = function (event) {\n          throw Error(\"Error reading the file\");\n        };\n      });\n    }\n  }, {\n    key: '_showRule',\n    value: function _showRule() {\n      var _this11 = this;\n\n      var ruleTitle = event.target.textContent;\n      var id = event.target.closest('tr').id;\n      var splitId = id.split(':');\n      var priority = splitId[splitId.length - 1];\n      splitId.pop();\n      var policyTitle = splitId.join(':');\n      var rule = this.policiesManager.getRuleOfPolicy(policyTitle, priority);\n      if (rule.condition.attribute === 'subscription' && rule.condition.params === 'preauthorised') {\n        $('.authorise-btns').addClass('hide');\n      } else {\n        var element = void 0;\n        if (rule.decision) {\n          element = document.getElementById('btn-allow');\n        } else {\n          element = document.getElementById('btn-block');\n        }\n        element.checked = true;\n        $('.authorise-btns').removeClass('hide');\n      }\n      $('.member-add').addClass('hide');\n      $('.member-new-btn').addClass('hide');\n\n      $('.rule-details').openModal();\n      $('.rule-title').html('<h5><b>' + ruleTitle + '</b></h5>');\n      if (rule.condition.attribute === 'subscription') {\n        $('.subscription-type').removeClass('hide');\n      }\n      $('.subscription-decision').on('click', function (event) {\n        _this11._updateRule('subscription', policyTitle, rule);\n      });\n      $('.decision').off();\n      $('.decision').on('click', function (event) {\n        _this11._updateRule('authorisation', policyTitle, rule);\n      });\n    }\n  }, {\n    key: '_updateRule',\n    value: function _updateRule(type, policyTitle, rule) {\n      var title = $('.rule-title').text();\n      var splitTitle = title.split(' ');\n      var index = splitTitle.indexOf('is');\n      if (index === -1) {\n        index = splitTitle.indexOf('are');\n      }\n      switch (type) {\n        case 'authorisation':\n          var newDecision = $(\"input[name='rule-update-decision']:checked\")[0].id;\n\n          if (newDecision === 'btn-allow') {\n            splitTitle[index + 1] = 'allowed';\n            newDecision = true;\n          } else {\n            splitTitle[index + 1] = 'blocked';\n            newDecision = false;\n          }\n          title = splitTitle.join(' ');\n          $('.rule-title').html('<h5><b>' + title + '</b></h5>');\n          this.policiesManager.updatePolicy(policyTitle, rule, newDecision);\n          break;\n        case 'subscription':\n          var newSubscriptionType = event.target.labels[0].textContent;\n\n          var decision = splitTitle[index + 1];\n          splitTitle = title.split('hyperties are');\n          if (newSubscriptionType === 'All subscribers') {\n            $('.authorise-btns').removeClass('hide');\n            newDecision = rule.decision;\n            newSubscriptionType = '*';\n            title = 'Subscriptions from all hyperties are' + splitTitle[1];\n          } else {\n            $('.authorise-btns').addClass('hide');\n            newDecision = true;\n            newSubscriptionType = 'preauthorised';\n            title = 'Subscriptions from previously authorised hyperties are' + splitTitle[1];\n          }\n\n          $('.rule-title').html('<h5><b>' + title + '</b></h5>');\n          this.policiesManager.updatePolicy(policyTitle, rule, newDecision, newSubscriptionType);\n          break;\n      }\n      this._goHome();\n    }\n  }]);\n\n  return PoliciesGUI;\n}();\n\nexports.default = PoliciesGUI;\n\n},{\"./PoliciesManager\":3}],3:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar PoliciesManager = function () {\n  function PoliciesManager(policyEngine) {\n    _classCallCheck(this, PoliciesManager);\n\n    this.policyEngine = policyEngine;\n    this.policies = this.policyEngine.context.userPolicies;\n    this.variables = this.setVariables();\n    this.addition = this.setAdditionMethods();\n    this.validation = this.setValidationMethods();\n  }\n\n  _createClass(PoliciesManager, [{\n    key: 'addToGroup',\n    value: function addToGroup(groupName, user) {\n      this.policyEngine.context.addToGroup(groupName, user);\n    }\n  }, {\n    key: 'createGroup',\n    value: function createGroup(groupName) {\n      this.policyEngine.context.createGroup(groupName);\n    }\n  }, {\n    key: 'addPolicy',\n    value: function addPolicy(title, combiningAlgorithm, policy) {\n      if (policy === undefined) {\n        switch (combiningAlgorithm) {\n          case 'Block overrides':\n            combiningAlgorithm = 'blockOverrides';\n            break;\n          case 'Allow overrides':\n            combiningAlgorithm = 'allowOverrides';\n            break;\n          case 'First applicable':\n            combiningAlgorithm = 'firstApplicable';\n            break;\n          default:\n            combiningAlgorithm = undefined;\n        }\n      }\n\n      this.policyEngine.addPolicy('USER', title, policy, combiningAlgorithm);\n    }\n  }, {\n    key: 'decreaseRulePriority',\n    value: function decreaseRulePriority(policyTitle, thisPriority, newPriority) {\n      this.getRuleOfPolicy(policyTitle, newPriority).priority = thisPriority;\n      this.getRuleOfPolicy(policyTitle, thisPriority).priority = newPriority;\n      this.policyEngine.context.savePolicies('USER');\n    }\n  }, {\n    key: 'deleteGroup',\n    value: function deleteGroup(groupName) {\n      this.policyEngine.context.deleteGroup(groupName);\n    }\n  }, {\n    key: 'deletePolicy',\n    value: function deletePolicy(title) {\n      this.policyEngine.removePolicy('USER', title);\n    }\n  }, {\n    key: 'deleteRule',\n    value: function deleteRule(policyTitle, rule) {\n      var userPolicies = this.policyEngine.context.userPolicies;\n      userPolicies[policyTitle].deleteRule(rule);\n      this.policyEngine.context.savePolicies('USER');\n    }\n  }, {\n    key: 'getActivePolicy',\n    value: function getActivePolicy() {\n      return this.policyEngine.context.activeUserPolicy;\n    }\n  }, {\n    key: 'getPolicy',\n    value: function getPolicy(key) {\n      return this.policyEngine.context.userPolicies[key];\n    }\n  }, {\n    key: 'getPoliciesTitles',\n    value: function getPoliciesTitles() {\n      var policies = this.policyEngine.context.userPolicies;\n      var titles = [];\n\n      for (var i in policies) {\n        titles.push(i);\n      }\n\n      return titles;\n    }\n  }, {\n    key: 'getTargets',\n    value: function getTargets(scope) {\n      var targets = [];\n\n      for (var i in this.policies[scope]) {\n        if (targets.indexOf(i) === -1) {\n          targets.push(i);\n        }\n      }\n\n      return targets;\n    }\n  }, {\n    key: 'increaseRulePriority',\n    value: function increaseRulePriority(policyTitle, thisPriority, newPriority) {\n      this.getRuleOfPolicy(policyTitle, thisPriority).priority = newPriority;\n      this.getRuleOfPolicy(policyTitle, newPriority).priority = thisPriority;\n      this.policyEngine.context.savePolicies('USER');\n    }\n  }, {\n    key: 'setVariables',\n    value: function setVariables() {\n      return {\n        'Date': {\n          title: '<br><h5>Updating date related configurations</h5><p>Incoming communications in the introduced date will be allowed or blocked according to your configurations, which can be changed in the preferences page.</p><br>',\n          description: '<p>Date:</p>',\n          input: [['date', []]]\n        },\n        'Domain': {\n          title: '<br><h5>Updating domain configurations</h5><p>Incoming communications from a user whose identity is from the introduced domain allowed or blocked according to your configurations, which can be changed in the preferences page.</p><br>',\n          description: '<p>Domain:</p>',\n          input: [['form', []]]\n        },\n        'Group of users': {\n          title: '<br><h5>Updating groups configurations</h5><p>Incoming communications from a user whose identity is in the introduced group will be allowed or blocked according to your configurations, which can be changed in the preferences page.</p><br>',\n          description: '<p>Group name:</p>',\n          input: [['select', ['group', 'Select a group:']]]\n        },\n        'Subscription preferences': {\n          title: '<br><h5>Updating subscriptions configurations</h5><p>The acceptance of subscriptions to your hyperties will be allowed or blocked according to your configurations, which can be changed in the preferences page.</p><br>',\n          input: []\n        },\n        'Time of the day': {\n          title: '<br><h5>Updating time configurations</h5><p>Incoming communications in the introduced timeslot will be blocked, but this can be changed in the preferences page.</p><p>Please introduce a new timeslot in the following format:</p><p class=\"center-align\">&lt;START-HOUR&gt;:&lt;START-MINUTES&gt; to &lt;END-HOUR&gt;:&lt;END-MINUTES&gt;</p><br>',\n          description: '<p>Timeslot:</p>',\n          input: [['form', []]]\n        },\n        Weekday: {\n          title: '<br><h5>Updating weekday configurations</h5><p>Incoming communications in the introduced weekday will be allowed or blocked according to your configurations, which can be changed in the preferences page.</p><br>',\n          description: '<p>Weekday:</p>',\n          input: [['select', ['weekday', 'Select a weekday:', ['Saturday', 'Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday']]]]\n        }\n      };\n    }\n  }, {\n    key: 'setAdditionMethods',\n    value: function setAdditionMethods() {\n      var _this = this;\n\n      return {\n        Date: function Date(params) {\n          var policyTitle = params[0];\n          var userPolicies = _this.policyEngine.context.userPolicies;\n          userPolicies[policyTitle].createRule(params[4], { attribute: 'date', operator: 'equals', params: params[3] }, params[1], params[2]);\n          _this.policyEngine.context.savePolicies('USER');\n        },\n\n        Domain: function Domain(params) {\n          var policyTitle = params[0];\n          var userPolicies = _this.policyEngine.context.userPolicies;\n          userPolicies[policyTitle].createRule(params[4], { attribute: 'domain', operator: 'equals', params: params[3] }, params[1], params[2]);\n          _this.policyEngine.context.savePolicies('USER');\n        },\n        'Group of users': function GroupOfUsers(params) {\n          var policyTitle = params[0];\n          var userPolicies = _this.policyEngine.context.userPolicies;\n          userPolicies[policyTitle].createRule(params[4], { attribute: 'source', operator: 'in', params: params[3] }, params[1], params[2]);\n          _this.policyEngine.context.savePolicies('USER');\n        },\n        'Subscription preferences': function SubscriptionPreferences(params) {\n          var policyTitle = params[0];\n          var userPolicies = _this.policyEngine.context.userPolicies;\n          var operator = 'equals';\n          if (params[3] === 'preauthorised') {\n            operator = 'in';\n          }\n          userPolicies[policyTitle].createRule(params[4], { attribute: 'subscription', operator: thisOperator, params: params[3] }, params[1], params[2]);\n          _this.policyEngine.context.savePolicies('USER');\n        },\n        'Time of the day': function TimeOfTheDay(params) {\n          var policyTitle = params[0];\n          var userPolicies = _this.policyEngine.context.userPolicies;\n          params[3] = params[3].split(' to ');\n          var start = params[3][0].split(':');\n          start = start.join('');\n          var end = params[3][1].split(':');\n          end = end.join('');\n          userPolicies[policyTitle].createRule(params[4], { attribute: 'time', operator: 'between', params: [start, end] }, params[1], params[2]);\n          _this.policyEngine.context.savePolicies('USER');\n        },\n\n        Weekday: function Weekday(params) {\n          var weekdays = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n          params[3] = weekdays.indexOf(params[3]);\n          var policyTitle = params[0];\n          var userPolicies = _this.policyEngine.context.userPolicies;\n          userPolicies[policyTitle].createRule(params[4], { attribute: 'weekday', operator: 'equals', params: params[3] }, params[1], params[2]);\n          _this.policyEngine.context.savePolicies('USER');\n        }\n      };\n    }\n  }, {\n    key: 'setValidationMethods',\n    value: function setValidationMethods() {\n      var _this2 = this;\n\n      return {\n        Date: function Date(scope, info) {\n          return _this2.isValidDate(info) & _this2.isValidScope(scope);\n        },\n        'Group of users': function GroupOfUsers(scope, info) {\n          return _this2.isValidString(info) & _this2.isValidScope(scope);\n        },\n        Domain: function Domain(scope, info) {\n          return _this2.isValidDomain(info) & _this2.isValidScope(scope);\n        },\n        Weekday: function Weekday(scope, info) {\n          return true & _this2.isValidScope(scope);\n        },\n        'Subscription preferences': function SubscriptionPreferences(scope, info) {\n          return _this2.isValidSubscriptionType(info) & _this2.isValidScope(scope);\n        },\n        'Time of the day': function TimeOfTheDay(scope, info) {\n          return _this2.isValidTimeslot(info) & _this2.isValidScope(scope);\n        }\n      };\n    }\n  }, {\n    key: 'updateActivePolicy',\n    value: function updateActivePolicy(title) {\n      this.policyEngine.context.activeUserPolicy = title;\n      this.policyEngine.context.saveActivePolicy();\n    }\n  }, {\n    key: 'isValidEmail',\n    value: function isValidEmail(info) {\n      var pattern = /[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,3}$/;\n      return pattern.test(info);\n    }\n  }, {\n    key: 'isValidDomain',\n    value: function isValidDomain(info) {\n      var pattern = /[a-z0-9.-]+\\.[a-z]{2,3}$/;\n      return pattern.test(info);\n    }\n  }, {\n    key: 'isValidString',\n    value: function isValidString(info) {\n      var pattern = /[a-z0-9.-]$/;\n      return pattern.test(info);\n    }\n  }, {\n    key: 'isValidSubscriptionType',\n    value: function isValidSubscriptionType(info) {\n      return true;\n    }\n  }, {\n    key: 'isValidDate',\n    value: function isValidDate(info) {\n      var infoSplit = info.split('/');\n      var day = parseInt(infoSplit[0]);\n      var month = parseInt(infoSplit[1]);\n      var year = parseInt(infoSplit[2]);\n\n      var date = new Date(year, month - 1, day);\n      var isValidFormat = date.getFullYear() === year && date.getMonth() + 1 === month && date.getDate() === day;\n      var formattedDate = date.getDate() + '/' + (date.getMonth() + 1) + '/' + date.getFullYear();\n      var now = new Date();\n      var today = now.getDate() + '/' + (now.getMonth() + 1) + '/' + now.getFullYear();\n\n      var isFuture = false;\n      if (date.getFullYear() > now.getFullYear()) {\n        isFuture = true;\n      } else {\n        if (date.getFullYear() == now.getFullYear()) {\n          if (date.getMonth() + 1 > now.getMonth() + 1) {\n            isFuture = true;\n          } else {\n            if (date.getMonth() + 1 == now.getMonth() + 1) {\n              if (date.getDate() >= now.getDate()) {\n                isFuture = true;\n              }\n            }\n          }\n        }\n      }\n\n      return isValidFormat && isFuture;\n    }\n  }, {\n    key: 'isValidScope',\n    value: function isValidScope(scope) {\n      return scope !== '';\n    }\n  }, {\n    key: 'isValidTimeslot',\n    value: function isValidTimeslot(info) {\n      if (!info) {\n        return false;\n      }\n      var splitInfo = info.split(' to '); // [12:00, 13:00]\n      var twoTimes = splitInfo.length === 2;\n      if (!twoTimes) {\n        return false;\n      }\n      var splitStart = splitInfo[0].split(':'); // [12, 00]\n      var splitEnd = splitInfo[1].split(':'); // [13, 00]\n      if (splitStart.length !== 2 || splitEnd.length !== 2) {\n        return false;\n      }\n      var okSize = splitStart[0].length === 2 && splitStart[1].length === 2 && splitEnd[0].length === 2 && splitEnd[1].length === 2;\n      var areIntegers = splitStart[0] == parseInt(splitStart[0], 10) && splitStart[1] == parseInt(splitStart[1], 10) && splitEnd[0] == parseInt(splitEnd[0], 10) && splitEnd[1] == parseInt(splitEnd[1], 10);\n      return twoTimes && okSize && areIntegers;\n    }\n  }, {\n    key: 'getFormattedPolicies',\n    value: function getFormattedPolicies() {\n      var policiesPE = this.policyEngine.context.userPolicies;\n      var policiesGUI = [];\n\n      for (var i in policiesPE) {\n        var policy = {\n          title: policiesPE[i].key,\n          rulesTitles: [],\n          ids: []\n        };\n\n        if (policiesPE[i].rules.length !== 0) {\n          policiesPE[i].rules = policiesPE[i].sortRules();\n          for (var j in policiesPE[i].rules) {\n            var title = this._getTitle(policiesPE[i].rules[j]);\n            policy.rulesTitles.push(title);\n            policy.ids.push(policy.title + ':' + policiesPE[i].rules[j].priority);\n          }\n        }\n\n        policiesGUI.push(policy);\n      }\n\n      return policiesGUI;\n    }\n  }, {\n    key: 'getRuleOfPolicy',\n    value: function getRuleOfPolicy(title, priority) {\n      var policies = this.policyEngine.context.userPolicies;\n      var policy = policies[title];\n      return policy.getRuleByPriority(priority);\n    }\n  }, {\n    key: '_getTitle',\n    value: function _getTitle(rule) {\n      var condition = rule.condition;\n      var authorise = rule.decision ? 'allowed' : 'blocked';\n      var target = rule.target === 'global' ? 'All identities and hyperties' : rule.target;\n      var attribute = condition.attribute;\n      switch (attribute) {\n        case 'date':\n          return 'Date ' + condition.params + ' is ' + authorise + ' (' + target + ')';\n        case 'domain':\n          return 'Domain \\\"' + condition.params + '\\\" is ' + authorise + ' (' + target + ')';\n        case 'source':\n          if (condition.operator === 'in') {\n            return 'Group \\\"' + condition.params + '\\\" is ' + authorise + ' (' + target + ')';\n          } else {\n            if (condition.operator === 'equals') {\n              return 'User ' + condition.params + ' is ' + authorise + ' (' + target + ')';\n            }\n          }\n        case 'subscription':\n          if (condition.params === '*') {\n            return 'Subscriptions from all hyperties are ' + authorise + ' (' + target + ')';\n          } else {\n            if (condition.params === 'preauthorised') {\n              return 'Subscriptions from previously authorised hyperties are allowed (' + target + ')';\n            }\n          }\n        case 'time':\n          var start = condition.params[0][0] + condition.params[0][1] + ':' + condition.params[0][2] + condition.params[0][3];\n          var end = condition.params[1][0] + condition.params[1][1] + ':' + condition.params[1][2] + condition.params[1][3];\n          return 'Timeslot from ' + start + ' to ' + end + ' is ' + authorise + ' (' + target + ')';\n        case 'weekday':\n          var weekdays = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n          var weekdayID = condition.params;\n          return 'Weekday \\\"' + weekdays[weekdayID] + '\\\" is ' + authorise + ' (' + target + ')';\n        default:\n          return 'Rule ' + rule.priority + ' is ' + authorise + ' (' + target + ')';\n      }\n    }\n  }, {\n    key: 'getVariables',\n    value: function getVariables() {\n      var variablesTitles = [];\n      for (var i in this.variables) {\n        variablesTitles.push(i);\n      }\n      return variablesTitles;\n    }\n  }, {\n    key: 'getVariableInfo',\n    value: function getVariableInfo(variable) {\n      return this.variables[variable];\n    }\n  }, {\n    key: 'getMyEmails',\n    value: function getMyEmails() {\n      return this.policyEngine.context.getMyEmails();\n    }\n  }, {\n    key: 'getMyHyperties',\n    value: function getMyHyperties() {\n      return this.policyEngine.context.getMyHyperties();\n    }\n\n    //TODO If there is a problem with the input, show it to the user\n\n  }, {\n    key: 'setInfo',\n    value: function setInfo(variable, policyTitle, info, authorise, scope, target) {\n      if (this.validation[variable](scope, info)) {\n        this.addition[variable]([policyTitle, scope, target, info, authorise]);\n      } else {\n        throw Error('Invalid configuration');\n      }\n    }\n  }, {\n    key: 'getInfo',\n    value: function getInfo(scope, title) {\n      var policies = this.policies[scope];\n      var policy = {};\n      for (var i in policies) {\n        if (policies[i].condition === title) {\n          policy = policies[i];\n        }\n      }\n      if (policy !== {}) {\n        var condition = policy.condition.split(' ');\n        return this.policyEngine.getList(scope, condition[2]);\n      } else {\n        throw Error('Policy <' + title + '> not found!');\n      }\n    }\n  }, {\n    key: 'deleteInfo',\n    value: function deleteInfo(variable, scope, target, info) {\n      var params = [scope, target, info];\n      if (variable === 'member') {\n        var conditionSplit = info.split(' ');\n        var groupName = conditionSplit[2];\n        params = [scope, groupName, info];\n      }\n      this.deletion[variable](params);\n    }\n  }, {\n    key: 'getGroup',\n    value: function getGroup(scope, target, groupName) {\n      return this.policyEngine.context.getGroup(scope, target, groupName);\n    }\n  }, {\n    key: 'getGroups',\n    value: function getGroups() {\n      var groups = this.policyEngine.context.groups;\n      var groupsGUI = {\n        groupsNames: [],\n        members: [],\n        ids: []\n      };\n\n      for (var i in groups) {\n        groupsGUI.groupsNames.push(i);\n        groupsGUI.members.push(groups[i]);\n        var ids = [];\n        for (var j in groups[i]) {\n          ids.push(i + '::' + groups[i][j]);\n        }\n        groupsGUI.ids.push(ids);\n      }\n\n      return groupsGUI;\n    }\n  }, {\n    key: 'getGroupsNames',\n    value: function getGroupsNames() {\n      return this.policyEngine.context.getGroupsNames();\n    }\n  }, {\n    key: 'removeFromGroup',\n    value: function removeFromGroup(groupName, user) {\n      this.policyEngine.context.removeFromGroup(groupName, user);\n    }\n  }, {\n    key: 'updatePolicy',\n    value: function updatePolicy(policyTitle, rule, newDecision, newSubscriptionType) {\n      var userPolicies = this.policyEngine.context.userPolicies;\n      userPolicies[policyTitle].deleteRule(rule);\n      if (!newSubscriptionType) {\n        userPolicies[policyTitle].createRule(newDecision, rule.condition, rule.scope, rule.target, rule.priority);\n      } else {\n        var operator = newSubscriptionType === '*' ? 'equals' : 'in';\n        userPolicies[policyTitle].createRule(newDecision, [{ attribute: 'subscription', opeator: operator, params: newSubscriptionType }], rule.scope, rule.target, rule.priority);\n      }\n\n      this.policyEngine.context.savePolicies('USER');\n    }\n  }]);\n\n  return PoliciesManager;\n}();\n\nexports.default = PoliciesManager;\n\n},{}],4:[function(require,module,exports){\n'use strict';\n\nvar _IdentitiesGUI = require('./IdentitiesGUI');\n\nvar _IdentitiesGUI2 = _interopRequireDefault(_IdentitiesGUI);\n\nvar _PoliciesGUI = require('./PoliciesGUI');\n\nvar _PoliciesGUI2 = _interopRequireDefault(_PoliciesGUI);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n},{\"./IdentitiesGUI\":1,\"./PoliciesGUI\":2}]},{},[4])(4)\n});\n\n","// jshint browser:true, jquery: true\n\nclass IdentitiesGUI {\n\n  constructor(identityModule) {\n    if (!identityModule) throw Error('Identity Module not set!');\n    let _this = this;\n    let guiURL = identityModule._runtimeURL + '/identity-gui';\n    _this._guiURL = guiURL;\n    _this.identityModule = identityModule;\n    _this._messageBus = identityModule.messageBus;\n    _this.identityModule.deployGUI();\n\n    _this.resultURL  = undefined;\n\n    _this._messageBus.addListener(guiURL, msg => {\n      let identityInfo = msg.body.value;\n      let value;\n\n      // unhide the config page with the identity GUI\n      document.getElementsByTagName('body')[0].style = 'background-color:white;';\n      parent.postMessage({ body: { method: 'showAdminPage' }, to: 'runtime:gui-manager' }, '*');\n      $('.admin-page').removeClass('hide');\n      _this.showIdentitiesGUI(msg.body.value).then((identityInfo) => {\n        let replyMsg;\n\n        //hide config page with the identity GUI\n        parent.postMessage({ body: { method: 'hideAdminPage' }, to: 'runtime:gui-manager' }, '*');\n        $('.admin-page').addClass('hide');\n        document.getElementsByTagName('body')[0].style = 'background-color:transparent';\n        $('.identities-section').addClass('hide');\n        $('.policies-section').addClass('hide');\n\n        switch (identityInfo.type) {\n          case 'idp':\n            value = {type: 'idp', value: identityInfo.value, code: 200};\n            replyMsg = {id: msg.id, type: 'response', to: msg.from, from: msg.to, body: value};\n            _this._messageBus.postMessage(replyMsg);\n            break;\n\n          case 'identity':\n            value = {type: 'identity', value: identityInfo.value, code: 200};\n            replyMsg = {id: msg.id, type: 'response', to: msg.from, from: msg.to, body: value};\n            _this._messageBus.postMessage(replyMsg);\n            break;\n\n          default:\n            value = {type: 'error', value: 'Error on identity GUI', code: 400};\n            replyMsg = {id: msg.id, type: 'response', to: msg.from, from: msg.to, body: value};\n            _this._messageBus.postMessage(replyMsg);\n        }\n      });\n    });\n\n\n\n    $('.identities-page-show').on('click', function () {\n      //TODO call a IdM method that requests the identities\n      _this.showIdentitiesGUI();\n    });\n  }\n\n  showIdentitiesGUI(receivedInfo) {\n    let _this = this;\n\n    return new Promise((resolve, reject) => {\n\n      let identityInfo;\n      let toRemoveID;\n\n      if (receivedInfo) {\n        identityInfo = receivedInfo;\n        toRemoveID = false;\n      } else {\n        toRemoveID = true;\n        identityInfo = _this.identityModule.getIdentitiesToChoose();\n      }\n\n      $('.policies-section').addClass('hide');\n      $('.identities-section').removeClass('hide');\n\n      _this.showMyIdentities(identityInfo.identities, toRemoveID).then((identity) => {\n        console.log('chosen identity: ', identity);\n        resolve({type: 'identity', value: identity});\n      });\n\n      let callback = (value) => {\n        console.log('chosen identity: ', value);\n        resolve({type: 'identity', value: value});\n      };\n\n      let idps = identityInfo.idps;\n      $('#idproviders').html(_this._getList(idps));\n      $('#idproviders').off();\n      $('#idproviders').on('click', (event) => _this.obtainNewIdentity(callback, toRemoveID));\n      //$('.back').on('click', (event) => _this.goHome());\n      $('.identities-reset').off();\n      $('.identities-reset').on('click', (event) => _this._resetIdentities(callback));\n    });\n\n  }\n\n  showMyIdentities(emails, toRemoveID) {\n    let _this = this;\n\n    return new Promise((resolve, reject) => {\n\n      // let identities = _this.identityModule.getIdentities();\n      let identities = [];\n\n      for(let i in emails) {\n        let domain = emails[i].split('@');\n        identities.push({email: emails[i], domain: domain[1]});\n      }\n\n      let myIdentities = document.getElementById('my-ids');\n      myIdentities.innerHTML = '';\n\n      let table = _this.createTable();\n\n      let tbody = document.createElement('tbody');\n      let numIdentities = identities.length;\n      for (let i = 0; i < numIdentities; i++) {\n        let tr = _this.createTableRow(identities[i], toRemoveID);\n        tbody.appendChild(tr);\n      }\n\n      table.appendChild(tbody);\n      myIdentities.appendChild(table);\n\n      let callback = (identity) => {\n        resolve(identity);\n      };\n      if (!toRemoveID) {\n        $('.clickable-cell').on('click', (event) => _this.changeID(callback));\n      }\n      $('.remove-id').on('click', (event) => _this.removeID(emails));\n\n    });\n  }\n\n  createTable() {\n    let table = document.createElement('table');\n    table.className = 'centered';\n    let thead = document.createElement('thead');\n    let tr = document.createElement('tr');\n    let thEmail = document.createElement('th');\n    thEmail.textContent = 'Email';\n    tr.appendChild(thEmail);\n    thead.appendChild(tr);\n    table.appendChild(thead);\n    return table;\n  }\n\n  createTableRow(identity, toRemoveID) {\n    let tr = document.createElement('tr');\n\n    let td = document.createElement('td');\n    td.textContent = identity.email;\n    td.className = 'clickable-cell';\n    td.style = 'cursor: pointer';\n    tr.appendChild(td);\n\n    td = document.createElement('td');\n\n    if(toRemoveID) {\n      let btn = document.createElement('button');\n      btn.textContent = 'Remove';\n      btn.className = 'remove-id waves-effect waves-light btn';\n      td.appendChild(btn);\n    }\n    tr.appendChild(td);\n\n    return tr;\n  }\n\n  changeID(callback) {\n    let _this = this;\n\n    let idToUse = event.target.innerText;\n\n    //TODO improve later.\n    //prevents when the users selects an hyperty, exit the identity page and goes again to the identity page, from selecting \"settings\" button as identity.\n    if(idToUse !== 'settings') {\n\n      callback(idToUse);\n      return idToUse;\n    }\n  }\n\n  removeID(emails) {\n    let _this = this;\n    let row = event.target.parentNode.parentNode;\n    let idToRemove = row.children[0].textContent;\n    let domain = row.children[1].textContent;\n    _this.identityModule.unregisterIdentity(idToRemove);\n\n    let numEmails = emails.length;\n    for (let i = 0; i < numEmails; i++) {\n      if (emails[i].email === idToRemove) {\n        emails.splice(i, 1);\n        break;\n      }\n    }\n    // -------------------------------------------------------------------------//\n    _this.showMyIdentities(emails, true);\n\n  }\n\n  obtainNewIdentity(callback, toRemoveID) {\n    let _this = this;\n    let idProvider = event.target.textContent;\n    let idProvider2 = event.target.text;\n\n    _this.identityModule.crypto.generateRSAKeyPair().then(function(keyPair) {\n\n      let publicKey = btoa(keyPair.public);\n\n      _this.identityModule.sendGenerateMessage(publicKey, 'origin', undefined, idProvider).then((value) => {\n        console.log('receivedURL: ' + value.loginUrl.substring(0, 20) + '...');\n\n        let url = value.loginUrl;\n        let finalURL;\n\n        //check if the receivedURL contains the redirect field and replace it\n        if(url.indexOf('redirect_uri') !== -1) {\n          let firstPart = url.substring(0, url.indexOf('redirect_uri'));\n          let secondAuxPart = url.substring(url.indexOf('redirect_uri'), url.length);\n\n          let secondPart = secondAuxPart.substring(secondAuxPart.indexOf('&'), url.length);\n\n          //check if the reddirect field is the last field of the URL\n          if(secondPart.indexOf('&') !== -1) {\n            finalURL = firstPart + 'redirect_uri=' + location.origin + secondPart;\n          } else {\n            finalURL = firstPart + 'redirect_uri=' + location.origin;\n          }\n        }\n        _this.resultURL = finalURL || url;\n\n        $('.login-idp').html('<p>Chosen IDP: ' + idProvider + '</p>');\n        $('.login').removeClass('hide');\n        $('.login-btn').off();\n        $('.login-btn').on('click', (event) => {\n          $('.login').addClass('hide');\n          _this._authenticateUser(keyPair, publicKey, value, 'origin', idProvider).then((email) => {\n            callback(email);\n            _this.showIdentitiesGUI();\n          });\n        });\n      });\n    });\n\n  }\n\n  _getList(items) {\n    let list = '';\n    let numItems = items.length;\n\n    for (let i = 0; i < numItems; i++) {\n      list += '<li class=\"divider\"></li>';\n        list += '<li><a class=\"center-align\">' + items[i] + '</a></li>';\n    }\n\n    return list;\n  }\n\n  _authenticateUser(keyPair, publicKey, value, origin, idProvider) {\n    let _this = this;\n    let url = _this.resultURL;\n\n    return new Promise((resolve, reject) => {\n\n      _this.identityModule.openPopup(url).then((identity) => {\n\n        _this.identityModule.sendGenerateMessage(publicKey, origin, identity, idProvider).then((result) => {\n\n          if (result) {\n\n           _this.identityModule.storeIdentity(result, keyPair).then((value) => {\n             resolve(value.userProfile.username);\n           }, (err) => {\n             reject(err);\n           });\n\n          } else {\n           reject('error on obtaining identity information');\n          }\n\n          });\n         }, (err) => {\n           reject(err);\n      });\n    });\n  }\n\n_resetIdentities() {\n  console.log('_resetIdentities');\n}\n\n\n}\n\nexport default IdentitiesGUI;\n","import PoliciesManager from './PoliciesManager';\n\nclass PoliciesGUI {\n\n  constructor(policyEngine) {\n    if (!policyEngine) throw Error('Policy Engine is not set!');\n    this.policiesManager = new PoliciesManager(policyEngine);\n    this.elements = this._setElements();\n    this._setListeners();\n  }\n\n  _addMember() {\n    let group = event.target.id;\n    $('.member-new-intro').html('<h5>Add a member to a group</h5><p>Insert a user email below to add to the \"' + group + '\" group.</p>');\n    $('.member-new-modal').openModal();\n    $('.member-new-ok').off();\n    $('.member-new-ok').on('click', (event) => {\n      let member = $('#member-new').val();\n      $('#member-new').val('');\n      this.policiesManager.addToGroup(group, member);\n      $('.member-new-modal').closeModal();\n      this._manageGroups();\n    });\n  }\n\n  _createGroup() {\n    $('#group-new-name').val('');\n    $('.group-new-modal').openModal();\n    $('.group-new-ok').on('click', (event) => {\n      let groupName = $('#group-new-name').val();\n      this.policiesManager.createGroup(groupName);\n      this._manageGroups();\n    });\n  }\n\n  _addPolicy() {\n    $('#policy-new-title').val('');\n    $('.combining').html('');\n    let algorithms = ['Block overrides', 'Allow overrides', 'First applicable'];\n    $('.combining').append(this._getOptions('comb-algorithm', 'Choose a combining algorithm', algorithms));\n    $('.policy-new').openModal();\n\n    $('.policy-new-ok').off();\n    $('.policy-new-ok').on('click', (event) => {\n      let policyTitle = $('#policy-new-title').val();\n      if (!policyTitle) {\n        Materialize.toast('Invalid policy title', 4000);\n      } else {\n        let combiningAlgorithm = $('#comb-algorithm').val();\n        this.policiesManager.addPolicy(policyTitle, combiningAlgorithm);\n        $('.help-menu').addClass('hide');\n        $('.policy-new').closeModal();\n        this._goHome();\n      }\n    });\n    $('.help-btn').off();\n    $('.help-btn').on('click', (event) => {\n      $('.help-menu').removeClass('hide');\n    });\n  }\n\n  _decreaseRulePriority() {\n    let id = event.target.closest('tr').id;\n    let splitId = id.split(':');\n    let thisPriority = parseInt(splitId[splitId.length - 1]);\n    splitId.pop();\n    let policyTitle = splitId.join(':');\n    let lastPriority = this.policiesManager.getPolicy(policyTitle).getLastPriority();\n    if (lastPriority != thisPriority) {\n      let newPriority = parseInt(thisPriority + 1);\n      this.policiesManager.decreaseRulePriority(policyTitle, thisPriority, newPriority);\n      this._goHome();\n    }\n  }\n\n  _deleteMember() {\n    let id = event.target.closest('tr').id;\n    let splitId = id.split('::');\n    let member = splitId[splitId.length - 1];\n    splitId.pop();\n    let group = splitId.join('::');\n    this.policiesManager.removeFromGroup(group, member);\n    this._manageGroups();\n  }\n\n  _deleteGroup() {\n    let groupName = event.target.closest('tr').children[0].id;\n    this.policiesManager.deleteGroup(groupName);\n    this._manageGroups();\n  }\n\n  _deletePolicy() {\n    let policyTitle = event.target.closest('tr').id;\n    this.policiesManager.deletePolicy(policyTitle);\n    this._goHome();\n  }\n\n  _deleteRule() {\n    let id = event.target.closest('tr').id;\n    let splitId = id.split(':');\n    let priority = splitId[splitId.length - 1];\n    splitId.pop();\n    let policyTitle = splitId.join(':');\n    let rule = this.policiesManager.getRuleOfPolicy(policyTitle, priority);\n\n    this.policiesManager.deleteRule(policyTitle, rule);\n    this._goHome();\n  }\n\n  _getActivePolicy() {\n    $('.policy-active').html('');\n    let activeUserPolicy = this.policiesManager.getActivePolicy();\n    let policies = this.policiesManager.getPoliciesTitles();\n    policies.push('Deactivate all policies');\n\n    $('.policy-active').append(this._getOptions('policies-list', 'Click to activate a policy', policies, activeUserPolicy));\n\n    $('#policies-list').on('click', (event) => {\n      let policyTitle = $('#policies-list').find(\":selected\")[0].textContent;\n      if (policyTitle === 'Deactivate all policies') {\n        policyTitle = undefined;\n      }\n      this.policiesManager.updateActivePolicy(policyTitle);\n    });\n  }\n\n  _getGroupOptions(title, keys, scopes, lists) {\n    let list = '<option disabled selected>' + title + '</option>';\n\n    for (let i in keys) {\n      list += '<optgroup label=' + keys[i] + '>';\n      for (let j in lists[i]) {\n        list += '<option id=\"' + scopes[i] + '\">' + lists[i][j] + '</option>';\n      }\n    }\n\n    return list;\n  }\n\n  _getInfo(variable) {\n    let info;\n\n    switch(variable) {\n      case 'Date':\n        info = $('.config').find('input').val();\n        if (info.indexOf(',') !== -1) { //20 July, 2016\n          let splitInfo = info.split(' '); //['20', 'July,',' '2016']\n          splitInfo[1] = splitInfo[1].substring(0, splitInfo[1].length - 1); //'July'\n          let months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n          info = splitInfo[0] + '/' + (months.indexOf(splitInfo[1]) + 1) + '/' + splitInfo[2];\n        } else { // 2016-07-20\n          let splitInfo = info.split('-');\n          info = splitInfo[2] + '/' + splitInfo[1] + '/' + splitInfo[0];\n        }\n        break;\n      case 'Group of users':\n        info = $('#group').find(\":selected\").text();\n        break;\n      case 'Subscription preferences':\n        if (info = $(\"input[name='rule-new-subscription']:checked\")[0] !== undefined) {\n          info = $(\"input[name='rule-new-subscription']:checked\")[0].id;\n        }\n        break;\n      case 'Weekday':\n        info = $('#weekday').find(\":selected\").text();\n        break;\n      default:\n        info = $('.config').find('input').val();\n        break;\n    }\n\n    return info;\n  }\n\n  _getList(items) {\n      let list = '';\n      let numItems = items.length;\n\n      for (let i = 0; i < numItems; i++) {\n        list += '<li class=\"divider\"></li>';\n        list += '<li><a class=\"center-align\">' + items[i] + '</a></li>';\n      }\n\n      return list;\n    }\n\n  _getOptions(id, title, list, selected) {\n    let options = '<select id=\"' + id + '\" class=\"browser-default\"><option disabled selected>' + title + '</option>';\n    for (let i in list) {\n      if (selected !== undefined & selected === list[i]) {\n        options += '<option selected id=\"' + id + '\">' + list[i] + '</option>';\n      } else {\n        options += '<option id=\"' + id + '\">' + list[i] + '</option>';\n      }\n    }\n    options += '</select>';\n\n    return options;\n  }\n\n  _getPoliciesTable() {\n    $('.policies-no').addClass('hide');\n    $('.policies-current').html('');\n\n    let policies = this.policiesManager.getFormattedPolicies();\n    let policiesTitles = [];\n    let rulesTitles = [];\n    let ids = [];\n\n    for (let i in policies) {\n      policiesTitles.push(policies[i].title);\n      rulesTitles.push(policies[i].rulesTitles);\n      ids.push(policies[i].ids);\n    }\n\n    let table = '<table>';\n    let isEmpty = policiesTitles.length === 0;\n\n    for (let i in policiesTitles) {\n      table += '<thead><tr id=\"' + policiesTitles[i] + '\"><td></td><td></td><th class=\"center-align\">' + policiesTitles[i] + '</th><td><i class=\"material-icons clickable-cell policy-delete\" style=\"cursor: pointer; vertical-align: middle\">delete_forever</i></td></tr></thead><tbody>';\n\n      for (let j in rulesTitles[i]) {\n        table += '<tr id=\"' + ids[i][j] + '\" ><td><i class=\"material-icons clickable-cell rule-priority-increase\" style=\"cursor: pointer; vertical-align: middle\">arrow_upward</i></td><td><i class=\"material-icons clickable-cell rule-priority-decrease\" style=\"cursor: pointer; vertical-align: middle\">arrow_downward</i></td><td class=\"rule-show clickable-cell\" style=\"cursor: pointer\">' + rulesTitles[i][j] + '</td><td><i class=\"material-icons clickable-cell rule-delete\" style=\"cursor: pointer; vertical-align: middle\">clear</i></td></tr>';\n      }\n      table += '<tr id=\"' + policiesTitles[i] + '\"></td><td></td><td></td><td style=\"text-align:center\"><i class=\"material-icons clickable-cell center-align rule-add\" style=\"cursor: pointer\">add_circle</i></td></tr>';\n    }\n    if (!isEmpty) {\n      table += '</tbody></table>';\n      $('.policies-current').append(table);\n    } else {\n      $('.policies-no').removeClass('hide');\n    }\n    $('.rule-add').on('click', (event) => { this._showVariablesTypes(); });\n    $('.rule-delete').on('click', (event) => { this._deleteRule(); });\n    $('.rule-show').on('click', (event) => { this._showRule(); });\n    $('.rule-priority-increase').on('click', (event) => { this._increaseRulePriority(); });\n    $('.rule-priority-decrease').on('click', (event) => { this._decreaseRulePriority(); });\n    $('.policy-add').off();\n    $('.policy-add').on('click', (event) => { this._addPolicy(); });\n    $('.policy-delete').on('click', (event) => { this._deletePolicy(); });\n  }\n\n  _goHome() {\n    this._getActivePolicy();\n    this._getPoliciesTable();\n  }\n\n  _increaseRulePriority() {\n    let id = event.target.closest('tr').id;\n    let splitId = id.split(':');\n    let thisPriority = parseInt(splitId[splitId.length - 1]);\n    if (thisPriority !== 0) {\n      splitId.pop();\n      let policyTitle = splitId.join(':');\n      let newPriority = thisPriority - 1;\n\n      this.policiesManager.increaseRulePriority(policyTitle, thisPriority, newPriority);\n      this._goHome();\n    }\n  }\n\n  _manageGroups() {\n    $('.groups-current').html('');\n    let groupsPE = this.policiesManager.getGroups();\n    let groups = groupsPE.groupsNames;\n    let members = groupsPE.members;\n    let ids = groupsPE.ids;\n\n    let table = '<table>';\n    let isEmpty = groups.length === 0;\n\n    for (let i in groups) {\n      table += '<thead><tr><th id=\"' + groups[i] + '\">' + groups[i] + '</th><td style=\"text-align:right\"><i class=\"material-icons clickable-cell group-delete\" style=\"cursor: pointer; vertical-align: middle\">delete_forever</i></td></tr></thead><tbody>';\n      for (let j in members[i]) {\n        table += '<tr id=\"' + ids[i][j] + '\" ><td style=\"cursor: pointer\">' + members[i][j] + '</td><td style=\"text-align:right\"><i class=\"material-icons clickable-cell member-delete\" style=\"cursor: pointer; vertical-align: middle\">clear</i></td></tr>';\n      }\n\n      table += '<tr id=\"' + groups[i] + '\"><td><i class=\"material-icons clickable-cell member-add\" id=\"' + groups[i] + '\" style=\"cursor: pointer\">add_circle</i></td></tr>';\n    }\n\n    if (!isEmpty) {\n      table += '</tbody></table>';\n      $('.groups-current').append(table);\n    } else {\n      $('.groups-current').append('<p>There are no groups set.</p>');\n    }\n\n    $('.member-add').off();\n    $('.member-add').on('click', (event) => { this._addMember(); });\n    $('.member-delete').on('click', (event) => { this._deleteMember(); });\n    $('.group-add').off();\n    $('.group-add').on('click', (event) => { this._createGroup(); });\n    $('.group-delete').on('click', (event) => { this._deleteGroup(); });\n  }\n\n  _parseFileContent(content) {\n    let parsedContent = JSON.parse(content);\n    for (let i in parsedContent) {\n      this.policiesManager.addPolicy(i, undefined, parsedContent[i]);\n    }\n    $('.policy-new').closeModal();\n  }\n\n  _setElements() {\n    return {\n      date: (params) => { return '<input type=\"date\" class=\"datepicker\">'; },\n      select: (params) => { return this._getOptions(params[0], params[1], params[2]); },\n      form: (params) => { return '<form><input type=\"text\" placeholder=\"' + params + '\"></input></form>'; }\n    };\n  }\n\n  _showNewConfigurationPanel(policyTitle) {\n    let variable = event.target.text;\n    $('.variable').html(this._getNewConfiguration(policyTitle, variable));\n    $('.scopes').empty().html('');\n\n    let keys = ['Email', 'Hyperty', 'All'];\n    let scopes = ['identity', 'hyperty', 'global'];\n    let lists = [];\n\n    lists.push(this.policiesManager.getMyEmails());\n    lists.push(this.policiesManager.getMyHyperties());\n    lists.push(['All identities and hyperties']);\n    $('.scopes').append(this._getGroupOptions('Apply this configuration to:', keys, scopes, lists));\n    $('.variable').removeClass('hide');\n  }\n\n  _showVariablesTypes() {\n    let policyTitle = event.target.closest('tr').id;\n\n    $('#variables-types').empty().html('');\n    let variables = this.policiesManager.getVariables();\n    $('#variables-types').append(this._getList(variables));\n    $('.variable').addClass('hide');\n    $('.rule-new').openModal();\n    $('#variables-types').off();\n    $('#variables-types').on('click', (event) => { this._showNewConfigurationPanel(policyTitle); });\n  }\n\n  _getNewConfiguration(policyTitle, variable) {\n    let info = this.policiesManager.getVariableInfo(variable);\n    $('.rule-new-title').html(info.title);\n    $('.description').html(info.description);\n    $('.config').html('');\n\n    if (variable === 'Subscription preferences') {\n      $('.subscription-type').removeClass('hide');\n    } else {\n      $('.subscription-type').addClass('hide');\n      let tags = info.input;\n      for (let i in tags) {\n        if (variable === 'Group of users') {\n          tags[i][1].push(this.policiesManager.getGroupsNames());\n        }\n        $('.config').append(this.elements[tags[i][0]](tags[i][1]));\n        if (variable === 'Group of users') {\n          tags[i][1].pop();\n        }\n      }\n      if (variable ==='date') {\n        $('.datepicker').pickadate({\n          selectMonths: true,\n          selectYears: 15\n        });\n      }\n    }\n    document.getElementById('allow').checked = false;\n    document.getElementById('block').checked = false;\n    $('.ok-btn').off();\n    $('.ok-btn').on('click', (event) => {\n      if ($(\"input[name='rule-new-decision']:checked\")[0] !== undefined) {\n        let info = this._getInfo(variable);\n        let decision = $(\"input[name='rule-new-decision']:checked\")[0].id;\n        decision = decision === 'allow';\n        let scope = $('.scopes').find(\":selected\")[0].id;\n        let target = $('.scopes').find(\":selected\")[0].textContent;\n        target = (target === 'All identities and hyperties') ? 'global' : target;\n        this.policiesManager.setInfo(variable, policyTitle, info, decision, scope, target);\n        $('.rule-new').closeModal();\n        this._goHome();\n      } else {\n        throw Error('INFORMATION MISSING: please specify an authorisation decision.');\n      }\n    });\n  }\n\n  _deleteInfo(resourceType) {\n    let id = event.target.closest('tr').id;\n    let splitId = id.split(':');\n    let scope = splitId[0];\n    splitId.shift();\n    let target = splitId.join('');\n    let condition = event.target.closest('tr').children[0].id;\n    this.policiesManager.deleteInfo(resourceType, scope, target, condition);\n    this._goHome();\n  }\n\n  _setListeners() {\n    $('.settings-btn').on('click', (event) => {\n      parent.postMessage({ body: { method: 'showAdminPage' }, to: 'runtime:gui-manager' }, '*');\n      $('.admin-page').removeClass('hide');\n      document.getElementsByTagName('body')[0].style = 'background-color:white;';\n    });\n\n    $('.policies-page-show').on('click', (event) => {\n      $('.policies-section').removeClass('hide');\n      $('.identities-section').addClass('hide');\n      this._goHome();\n      this._manageGroups();\n    });\n\n    $('.admin-page-exit').on('click', (event) => {\n      parent.postMessage({ body: { method: 'hideAdminPage' }, to: 'runtime:gui-manager' }, '*');\n      $('.admin-page').addClass('hide');\n      document.getElementsByTagName('body')[0].style = 'background-color:transparent;';\n    });\n\n    $('.exit-btn').on('click', (event) => {\n      $('.subscription-type').addClass('hide');\n      $('.help-menu').addClass('hide');\n    });\n\n    $('#policy-file').on('change', (event) => {\n      let file = event.target.files[0];\n      let reader = new FileReader();\n      reader.readAsText(file, \"UTF-8\");\n      reader.onload = (event) => {\n        this._parseFileContent(event.target.result);\n        this._goHome();\n      }\n      reader.onerror = (event) => {\n        throw Error(\"Error reading the file\");\n      }\n    });\n  }\n\n  _showRule() {\n    let ruleTitle = event.target.textContent;\n    let id = event.target.closest('tr').id;\n    let splitId = id.split(':');\n    let priority = splitId[splitId.length - 1];\n    splitId.pop();\n    let policyTitle = splitId.join(':');\n    let rule = this.policiesManager.getRuleOfPolicy(policyTitle, priority);\n    if (rule.condition.attribute === 'subscription' && rule.condition.params === 'preauthorised') {\n      $('.authorise-btns').addClass('hide');\n    } else {\n      let element;\n      if (rule.decision) {\n        element = document.getElementById('btn-allow');\n      } else {\n        element = document.getElementById('btn-block');\n      }\n      element.checked = true;\n      $('.authorise-btns').removeClass('hide');\n    }\n    $('.member-add').addClass('hide');\n    $('.member-new-btn').addClass('hide');\n\n    $('.rule-details').openModal();\n    $('.rule-title').html('<h5><b>' + ruleTitle + '</b></h5>');\n    if (rule.condition.attribute === 'subscription') {\n      $('.subscription-type').removeClass('hide');\n    }\n    $('.subscription-decision').on('click', (event) => { this._updateRule('subscription', policyTitle, rule); });\n    $('.decision').off();\n    $('.decision').on('click', (event) => { this._updateRule('authorisation', policyTitle, rule);});\n  }\n\n  _updateRule(type, policyTitle, rule) {\n    let title = $('.rule-title').text();\n    let splitTitle = title.split(' ');\n    let index = splitTitle.indexOf('is');\n    if (index === -1) {\n      index = splitTitle.indexOf('are');\n    }\n    switch (type) {\n      case 'authorisation':\n        let newDecision = $(\"input[name='rule-update-decision']:checked\")[0].id;\n\n        if (newDecision === 'btn-allow') {\n          splitTitle[index + 1] = 'allowed';\n          newDecision = true;\n        } else {\n          splitTitle[index + 1] = 'blocked';\n          newDecision = false;\n        }\n        title = splitTitle.join(' ');\n        $('.rule-title').html('<h5><b>' + title + '</b></h5>');\n        this.policiesManager.updatePolicy(policyTitle, rule, newDecision);\n        break;\n      case 'subscription':\n        let newSubscriptionType = event.target.labels[0].textContent;\n\n        let decision = splitTitle[index + 1];\n        splitTitle = title.split('hyperties are');\n        if (newSubscriptionType === 'All subscribers') {\n          $('.authorise-btns').removeClass('hide');\n          newDecision = rule.decision;\n          newSubscriptionType = '*';\n          title = 'Subscriptions from all hyperties are' + splitTitle[1];\n        } else {\n          $('.authorise-btns').addClass('hide');\n          newDecision = true;\n          newSubscriptionType = 'preauthorised';\n          title = 'Subscriptions from previously authorised hyperties are' + splitTitle[1];\n        }\n\n        $('.rule-title').html('<h5><b>' + title + '</b></h5>');\n        this.policiesManager.updatePolicy(policyTitle, rule, newDecision, newSubscriptionType);\n        break;\n    }\n    this._goHome();\n  }\n}\n\nexport default PoliciesGUI;\n","class PoliciesManager {\n\n  constructor(policyEngine) {\n    this.policyEngine = policyEngine;\n    this.policies = this.policyEngine.context.userPolicies;\n    this.variables = this.setVariables();\n    this.addition = this.setAdditionMethods();\n    this.validation = this.setValidationMethods();\n  }\n\n  addToGroup(groupName, user) {\n    this.policyEngine.context.addToGroup(groupName, user);\n  }\n\n  createGroup(groupName) {\n    this.policyEngine.context.createGroup(groupName);\n  }\n\n  addPolicy(title, combiningAlgorithm, policy) {\n    if (policy === undefined) {\n      switch (combiningAlgorithm) {\n        case 'Block overrides':\n          combiningAlgorithm = 'blockOverrides';\n          break;\n        case 'Allow overrides':\n          combiningAlgorithm = 'allowOverrides';\n          break;\n        case 'First applicable':\n          combiningAlgorithm = 'firstApplicable';\n          break;\n        default:\n          combiningAlgorithm = undefined;\n      }\n    }\n\n    this.policyEngine.addPolicy('USER', title, policy, combiningAlgorithm);\n  }\n\n  decreaseRulePriority(policyTitle, thisPriority, newPriority) {\n    this.getRuleOfPolicy(policyTitle, newPriority).priority = thisPriority;\n    this.getRuleOfPolicy(policyTitle, thisPriority).priority = newPriority;\n    this.policyEngine.context.savePolicies('USER');\n  }\n\n  deleteGroup(groupName) {\n    this.policyEngine.context.deleteGroup(groupName);\n  }\n\n  deletePolicy(title) {\n    this.policyEngine.removePolicy('USER', title);\n  }\n\n  deleteRule(policyTitle, rule) {\n    let userPolicies = this.policyEngine.context.userPolicies;\n    userPolicies[policyTitle].deleteRule(rule);\n    this.policyEngine.context.savePolicies('USER');\n  }\n\n  getActivePolicy() {\n    return this.policyEngine.context.activeUserPolicy;\n  }\n\n  getPolicy(key) {\n    return this.policyEngine.context.userPolicies[key];\n  }\n\n  getPoliciesTitles() {\n    let policies = this.policyEngine.context.userPolicies;\n    let titles = [];\n\n    for (let i in policies) {\n      titles.push(i);\n    }\n\n    return titles;\n  }\n\n  getTargets(scope) {\n    let targets = [];\n\n    for (let i in this.policies[scope]) {\n      if (targets.indexOf(i) === -1) {\n        targets.push(i);\n      }\n    }\n\n    return targets;\n  }\n\n  increaseRulePriority(policyTitle, thisPriority, newPriority) {\n    this.getRuleOfPolicy(policyTitle, thisPriority).priority = newPriority;\n    this.getRuleOfPolicy(policyTitle, newPriority).priority = thisPriority;\n    this.policyEngine.context.savePolicies('USER');\n  }\n\n  setVariables() {\n    return {\n      'Date': {\n        title: '<br><h5>Updating date related configurations</h5><p>Incoming communications in the introduced date will be allowed or blocked according to your configurations, which can be changed in the preferences page.</p><br>',\n        description: '<p>Date:</p>',\n        input: [\n          ['date', []]\n        ]\n      },\n      'Domain': {\n        title: '<br><h5>Updating domain configurations</h5><p>Incoming communications from a user whose identity is from the introduced domain allowed or blocked according to your configurations, which can be changed in the preferences page.</p><br>',\n        description: '<p>Domain:</p>',\n        input: [\n          ['form', []]\n        ]\n      },\n      'Group of users': {\n        title: '<br><h5>Updating groups configurations</h5><p>Incoming communications from a user whose identity is in the introduced group will be allowed or blocked according to your configurations, which can be changed in the preferences page.</p><br>',\n        description: '<p>Group name:</p>',\n        input: [\n          ['select', ['group', 'Select a group:']]\n        ]\n      },\n      'Subscription preferences': {\n        title: '<br><h5>Updating subscriptions configurations</h5><p>The acceptance of subscriptions to your hyperties will be allowed or blocked according to your configurations, which can be changed in the preferences page.</p><br>',\n        input: []\n      },\n      'Time of the day': {\n        title: '<br><h5>Updating time configurations</h5><p>Incoming communications in the introduced timeslot will be blocked, but this can be changed in the preferences page.</p><p>Please introduce a new timeslot in the following format:</p><p class=\"center-align\">&lt;START-HOUR&gt;:&lt;START-MINUTES&gt; to &lt;END-HOUR&gt;:&lt;END-MINUTES&gt;</p><br>',\n        description: '<p>Timeslot:</p>',\n        input: [\n          ['form', []]\n        ]\n      },\n      Weekday: {\n        title: '<br><h5>Updating weekday configurations</h5><p>Incoming communications in the introduced weekday will be allowed or blocked according to your configurations, which can be changed in the preferences page.</p><br>',\n        description: '<p>Weekday:</p>',\n        input: [\n          ['select', ['weekday', 'Select a weekday:', ['Saturday', 'Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday']]]\n        ]\n      }\n    };\n  }\n\n  setAdditionMethods() {\n    return {\n      Date: (params) => {\n        let policyTitle = params[0];\n        let userPolicies = this.policyEngine.context.userPolicies;\n        userPolicies[policyTitle].createRule(params[4], { attribute: 'date', operator: 'equals', params: params[3] }, params[1], params[2]);\n        this.policyEngine.context.savePolicies('USER');\n      },\n\n      Domain: (params) => {\n        let policyTitle = params[0];\n        let userPolicies = this.policyEngine.context.userPolicies;\n        userPolicies[policyTitle].createRule(params[4], { attribute: 'domain', operator: 'equals', params: params[3] }, params[1], params[2]);\n        this.policyEngine.context.savePolicies('USER');\n      },\n      'Group of users': (params) => {\n        let policyTitle = params[0];\n        let userPolicies = this.policyEngine.context.userPolicies;\n        userPolicies[policyTitle].createRule(params[4], { attribute: 'source', operator: 'in', params: params[3] }, params[1], params[2]);\n        this.policyEngine.context.savePolicies('USER');\n      },\n      'Subscription preferences': (params) => {\n        let policyTitle = params[0];\n        let userPolicies = this.policyEngine.context.userPolicies;\n        let operator = 'equals';\n        if (params[3] === 'preauthorised') {\n          operator = 'in';\n        }\n        userPolicies[policyTitle].createRule(params[4], { attribute: 'subscription', operator: thisOperator, params: params[3] }, params[1], params[2]);\n        this.policyEngine.context.savePolicies('USER');\n      },\n      'Time of the day': (params) => {\n        let policyTitle = params[0];\n        let userPolicies = this.policyEngine.context.userPolicies;\n        params[3] = params[3].split(' to ');\n        let start = params[3][0].split(':');\n        start = start.join('');\n        let end = params[3][1].split(':');\n        end = end.join('');\n        userPolicies[policyTitle].createRule(params[4], { attribute: 'time', operator: 'between', params: [start, end] }, params[1], params[2]);\n        this.policyEngine.context.savePolicies('USER');\n      },\n\n      Weekday: (params) => {\n        let weekdays = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n        params[3] = weekdays.indexOf(params[3]);\n        let policyTitle = params[0];\n        let userPolicies = this.policyEngine.context.userPolicies;\n        userPolicies[policyTitle].createRule(params[4], { attribute: 'weekday', operator: 'equals', params: params[3] }, params[1], params[2]);\n        this.policyEngine.context.savePolicies('USER');\n      }\n    };\n  }\n\n  setValidationMethods() {\n    return {\n      Date: (scope, info) => { return this.isValidDate(info) & this.isValidScope(scope); },\n      'Group of users': (scope, info) => { return this.isValidString(info) & this.isValidScope(scope); },\n      Domain: (scope, info) => { return this.isValidDomain(info) & this.isValidScope(scope); },\n      Weekday: (scope, info) => { return true & this.isValidScope(scope); },\n      'Subscription preferences': (scope, info) => { return this.isValidSubscriptionType(info) & this.isValidScope(scope); },\n      'Time of the day': (scope, info) => { return this.isValidTimeslot(info) & this.isValidScope(scope); }\n    };\n  }\n\n  updateActivePolicy(title) {\n    this.policyEngine.context.activeUserPolicy = title;\n    this.policyEngine.context.saveActivePolicy();\n  }\n\n  isValidEmail(info) {\n    let pattern = /[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,3}$/;\n    return pattern.test(info);\n  }\n\n  isValidDomain(info) {\n    let pattern = /[a-z0-9.-]+\\.[a-z]{2,3}$/;\n    return pattern.test(info);\n  }\n\n  isValidString(info) {\n    let pattern = /[a-z0-9.-]$/;\n    return pattern.test(info);\n  }\n\n  isValidSubscriptionType(info) {\n    return true;\n  }\n\n  isValidDate(info) {\n    let infoSplit = info.split('/');\n    let day = parseInt(infoSplit[0]);\n    let month = parseInt(infoSplit[1]);\n    let year = parseInt(infoSplit[2]);\n\n    let date = new Date(year, month-1, day);\n    let isValidFormat = date.getFullYear() === year && date.getMonth() + 1 === month && date.getDate() === day;\n    let formattedDate = date.getDate() + '/' + (date.getMonth() + 1) + '/' + date.getFullYear()\n    let now = new Date();\n    let today = now.getDate() + '/' + (now.getMonth() + 1) + '/' + now.getFullYear();\n\n    let isFuture = false;\n    if (date.getFullYear() > now.getFullYear()) {\n      isFuture = true;\n    } else {\n      if (date.getFullYear() == now.getFullYear()) {\n        if ((date.getMonth() + 1) > (now.getMonth() + 1)) {\n          isFuture = true;\n        } else {\n          if ((date.getMonth() + 1) == (now.getMonth() + 1)) {\n            if (date.getDate() >= (now.getDate())) {\n              isFuture = true;\n            }\n          }\n        }\n      }\n    }\n\n    return (isValidFormat && isFuture);\n  }\n\n  isValidScope(scope) {\n    return scope !== '';\n  }\n\n  isValidTimeslot(info) {\n    if (!info) {\n      return false;\n    }\n    let splitInfo = info.split(' to '); // [12:00, 13:00]\n    let twoTimes = splitInfo.length === 2;\n    if (!twoTimes) {\n      return false;\n    }\n    let splitStart = splitInfo[0].split(':'); // [12, 00]\n    let splitEnd = splitInfo[1].split(':'); // [13, 00]\n    if (splitStart.length !== 2 || splitEnd.length !== 2) {\n      return false;\n    }\n    let okSize = (splitStart[0].length === 2) && (splitStart[1].length === 2) && (splitEnd[0].length === 2) && (splitEnd[1].length === 2);\n    let areIntegers = (splitStart[0] == parseInt(splitStart[0], 10)) && (splitStart[1] == parseInt(splitStart[1], 10)) && (splitEnd[0] == parseInt(splitEnd[0], 10)) && (splitEnd[1] == parseInt(splitEnd[1], 10));\n    return twoTimes && okSize && areIntegers;\n  }\n\n  getFormattedPolicies() {\n    let policiesPE = this.policyEngine.context.userPolicies;\n    let policiesGUI = [];\n\n    for (let i in policiesPE) {\n      let policy = {\n        title: policiesPE[i].key,\n        rulesTitles: [],\n        ids: []\n      }\n\n      if (policiesPE[i].rules.length !== 0) {\n        policiesPE[i].rules = policiesPE[i].sortRules();\n        for (let j in policiesPE[i].rules) {\n          let title = this._getTitle(policiesPE[i].rules[j]);\n          policy.rulesTitles.push(title);\n          policy.ids.push(policy.title + ':' + policiesPE[i].rules[j].priority);\n        }\n      }\n\n      policiesGUI.push(policy);\n    }\n\n    return policiesGUI;\n  }\n\n  getRuleOfPolicy(title, priority) {\n    let policies = this.policyEngine.context.userPolicies;\n    let policy = policies[title];\n    return policy.getRuleByPriority(priority);\n  }\n\n  _getTitle(rule) {\n    let condition = rule.condition;\n    let authorise = (rule.decision) ? 'allowed' : 'blocked';\n    let target = rule.target === 'global' ? 'All identities and hyperties' : rule.target;\n    let attribute = condition.attribute;\n    switch(attribute) {\n      case 'date':\n        return 'Date ' + condition.params + ' is ' + authorise + ' (' + target + ')';\n      case 'domain':\n        return 'Domain \\\"' + condition.params + '\\\" is ' + authorise + ' (' + target + ')';\n      case 'source':\n        if (condition.operator === 'in') {\n          return 'Group \\\"' + condition.params + '\\\" is ' + authorise + ' (' + target + ')';\n        } else {\n          if (condition.operator === 'equals') {\n            return 'User ' + condition.params + ' is ' + authorise + ' (' + target + ')';\n          }\n        }\n      case 'subscription':\n        if (condition.params === '*') {\n          return 'Subscriptions from all hyperties are ' + authorise + ' (' + target + ')';\n        } else {\n          if (condition.params === 'preauthorised') {\n            return 'Subscriptions from previously authorised hyperties are allowed (' + target + ')';\n          }\n        }\n      case 'time':\n        let start = condition.params[0][0] + condition.params[0][1] + ':' + condition.params[0][2] + condition.params[0][3];\n        let end = condition.params[1][0] + condition.params[1][1] + ':' + condition.params[1][2] + condition.params[1][3];\n        return 'Timeslot from ' + start + ' to ' + end + ' is ' + authorise + ' (' + target + ')';\n      case 'weekday':\n        let weekdays = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n        let weekdayID = condition.params;\n        return 'Weekday \\\"' + weekdays[weekdayID] + '\\\" is ' + authorise + ' (' + target + ')';\n      default:\n        return 'Rule ' + rule.priority + ' is ' + authorise + ' (' + target + ')';\n    }\n  }\n\n  getVariables() {\n    let variablesTitles = [];\n    for (let i in this.variables) {\n      variablesTitles.push(i);\n    }\n    return variablesTitles;\n  }\n\n  getVariableInfo(variable) {\n    return this.variables[variable];\n  }\n\n  getMyEmails() {\n    return this.policyEngine.context.getMyEmails();\n  }\n\n  getMyHyperties() {\n    return this.policyEngine.context.getMyHyperties();\n  }\n\n  //TODO If there is a problem with the input, show it to the user\n  setInfo(variable, policyTitle, info, authorise, scope, target) {\n    if (this.validation[variable](scope, info)) {\n      this.addition[variable]([policyTitle, scope, target, info, authorise]);\n    } else {\n      throw Error('Invalid configuration');\n    }\n  }\n\n  getInfo(scope, title) {\n    let policies = this.policies[scope];\n    let policy = {};\n    for (let i in policies) {\n      if (policies[i].condition === title) {\n        policy = policies[i];\n      }\n    }\n    if (policy !== {}) {\n      let condition = policy.condition.split(' ');\n      return this.policyEngine.getList(scope, condition[2]);\n    } else {\n      throw Error('Policy <' + title + '> not found!');\n    }\n  }\n\n  deleteInfo(variable, scope, target, info) {\n    let params = [scope, target, info];\n    if (variable === 'member') {\n      let conditionSplit = info.split(' ');\n      let groupName = conditionSplit[2];\n      params = [scope, groupName, info];\n    }\n    this.deletion[variable](params);\n  }\n\n  getGroup(scope, target, groupName) {\n    return this.policyEngine.context.getGroup(scope, target, groupName);\n  }\n\n  getGroups() {\n    let groups = this.policyEngine.context.groups;\n    let groupsGUI = {\n      groupsNames: [],\n      members: [],\n      ids: []\n    };\n\n    for (let i in groups) {\n      groupsGUI.groupsNames.push(i);\n      groupsGUI.members.push(groups[i]);\n      let ids = [];\n      for (let j in groups[i]) {\n        ids.push(i + '::' + groups[i][j]);\n      }\n      groupsGUI.ids.push(ids);\n    }\n\n    return groupsGUI;\n  }\n\n  getGroupsNames() {\n    return this.policyEngine.context.getGroupsNames();\n  }\n\n  removeFromGroup(groupName, user) {\n    this.policyEngine.context.removeFromGroup(groupName, user);\n  }\n\n  updatePolicy(policyTitle, rule, newDecision, newSubscriptionType) {\n    let userPolicies = this.policyEngine.context.userPolicies;\n    userPolicies[policyTitle].deleteRule(rule);\n    if (!newSubscriptionType) {\n      userPolicies[policyTitle].createRule(newDecision, rule.condition, rule.scope, rule.target, rule.priority);\n    } else {\n      let operator = (newSubscriptionType === '*') ? 'equals' : 'in';\n      userPolicies[policyTitle].createRule(newDecision, [{ attribute: 'subscription', opeator: operator, params: newSubscriptionType }], rule.scope, rule.target, rule.priority);\n    }\n\n    this.policyEngine.context.savePolicies('USER');\n  }\n\n}\n\nexport default PoliciesManager;\n","import IdentitiesGUI from './IdentitiesGUI'\nimport PoliciesGUI from './PoliciesGUI'\n\n\n\n//No direct access to runtime\n//communication over postMessage interface\n//new PoliciesGUI(runtime.policyEngine)\n//new IdentitiesGUI(runtime.identityModule)\n"]}